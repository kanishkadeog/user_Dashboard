{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmayu\\\\OneDrive\\\\Desktop\\\\kanishka\\\\project\\\\extra\\\\user_Dashboard\\\\user_dashboard\\\\src\\\\pages\\\\UsersPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UserTable from \"../components/UserTable\";\nimport FilterPopup from \"../components/FilterPopup\";\nimport { getUsers, deleteUser } from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [sortBy, setSortBy] = useState(\"id\"); // default sort\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    const data = await getUsers();\n    setUsers(data);\n  };\n  const handleDelete = async id => {\n    await deleteUser(id);\n    setUsers(users.filter(user => user.id !== id));\n  };\n  const handleFilterChange = filterValue => {\n    setFilter(filterValue);\n  };\n  const handleSortChange = e => {\n    setSortBy(e.target.value);\n  };\n\n  // filtering\n  let filteredUsers = [...users];\n  if (filter) {\n    filteredUsers = filteredUsers.filter(user => user.department.toLowerCase() === filter.toLowerCase());\n  }\n\n  // sorting\n  let sortedUsers = [...filteredUsers];\n  if (sortBy === \"id\") {\n    sortedUsers.sort((a, b) => a.id - b.id);\n  } else if (sortBy === \"firstName\") {\n    sortedUsers.sort((a, b) => a.firstName.localeCompare(b.firstName));\n  } else if (sortBy === \"department\") {\n    sortedUsers.sort((a, b) => a.department.localeCompare(b.department));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/add\"),\n        children: \"+ Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterPopup, {\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: handleSortChange,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"id\",\n          children: \"Sort by ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"firstName\",\n          children: \"Sort by First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"department\",\n          children: \"Sort by Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n      users: sortedUsers,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"RaGJzlv6xYHd+HbkYPObCTnGi6k=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersPage;\nexport default UsersPage;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { getUsers, deleteUser } from \"../services/api\";\n// import UserTable from \"../components/UserTable\";\n// import SearchBar from \"../components/SearchBar\";\n// import Pagination from \"../components/Pagination\";\n// import FilterPopup from \"../components/FilterPopup\";\n\n// /**\n//  * Utility: map JSONPlaceholder user to our model\n//  */\n// function mapUser(u) {\n//   const nameParts = (u.name || \"\").split(\" \");\n//   const firstName = nameParts[0] || \"\";\n//   const lastName = nameParts.slice(1).join(\" \") || \"\";\n//   const department = (u.company && u.company.name) ? u.company.name : \"General\";\n//   return {\n//     id: u.id,\n//     firstName,\n//     lastName,\n//     email: u.email || \"\",\n//     department,\n//     // keep original raw for edits if needed\n//     raw: u,\n//   };\n// }\n\n// export default function UsersPage() {\n//   const [rawUsers, setRawUsers] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // UI states\n//   const [search, setSearch] = useState(\"\");\n//   const [filters, setFilters] = useState({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" });\n//   const [filterPopupOpen, setFilterPopupOpen] = useState(false);\n//   const [pageSize, setPageSize] = useState(10);\n//   const [page, setPage] = useState(1);\n//   const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   // Fetch users from API\n//   async function fetchUsers() {\n//     setLoading(true);\n//     setError(null);\n//     try {\n//       const data = await getUsers();\n//       // map to our simpler model\n//       setRawUsers(data.map(mapUser));\n//     } catch (err) {\n//       console.error(err);\n//       setError(err.message || \"Error fetching users\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   // Delete user handler\n//   async function handleDelete(id) {\n//     try {\n//       await deleteUser(id); // simulated\n//       // remove locally to reflect UI changes\n//       setRawUsers((prev) => prev.filter((u) => u.id !== id));\n//       alert(\"User deleted (simulated)\"); // simple notification\n//     } catch (err) {\n//       alert(\"Failed to delete user: \" + err.message);\n//     }\n//   }\n\n//   // Sort handler (toggle)\n//   function handleSort(key) {\n//     setSortConfig((prev) => {\n//       if (prev.key === key) {\n//         return { key, direction: prev.direction === \"asc\" ? \"desc\" : \"asc\" };\n//       } else {\n//         return { key, direction: \"asc\" };\n//       }\n//     });\n//   }\n\n//   // Apply filters + search + sort\n//   const processed = useMemo(() => {\n//     // start with rawUsers\n//     let items = [...rawUsers];\n\n//     // filter popup fields (exact/contains)\n//     if (filters.firstName) {\n//       items = items.filter((u) => u.firstName.toLowerCase().includes(filters.firstName.toLowerCase()));\n//     }\n//     if (filters.lastName) {\n//       items = items.filter((u) => u.lastName.toLowerCase().includes(filters.lastName.toLowerCase()));\n//     }\n//     if (filters.email) {\n//       items = items.filter((u) => u.email.toLowerCase().includes(filters.email.toLowerCase()));\n//     }\n//     if (filters.department) {\n//       items = items.filter((u) => u.department.toLowerCase().includes(filters.department.toLowerCase()));\n//     }\n\n//     // global search across fields\n//     if (search && search.trim() !== \"\") {\n//       const q = search.toLowerCase();\n//       items = items.filter((u) =>\n//         u.firstName.toLowerCase().includes(q) ||\n//         u.lastName.toLowerCase().includes(q) ||\n//         u.email.toLowerCase().includes(q) ||\n//         u.department.toLowerCase().includes(q)\n//       );\n//     }\n\n//     // sort\n//     const { key, direction } = sortConfig || {};\n//     if (key) {\n//       items.sort((a, b) => {\n//         const va = (a[key] || \"\").toString().toLowerCase();\n//         const vb = (b[key] || \"\").toString().toLowerCase();\n//         if (va < vb) return direction === \"asc\" ? -1 : 1;\n//         if (va > vb) return direction === \"asc\" ? 1 : -1;\n//         return 0;\n//       });\n//     }\n\n//     return items;\n//   }, [rawUsers, search, filters, sortConfig]);\n\n//   // pagination calculations\n//   const totalItems = processed.length;\n//   const totalPages = Math.max(1, Math.ceil(totalItems / pageSize));\n//   // adjust page if current page out of range\n//   useEffect(() => {\n//     if (page > totalPages) setPage(totalPages);\n//   }, [totalPages, page]);\n\n//   const currentData = processed.slice((page - 1) * pageSize, page * pageSize);\n\n//   return (\n//     <div>\n//       <div className=\"d-flex flex-column flex-md-row align-items-start gap-3 justify-content-between mb-3\">\n//         <div style={{ flex: 1, minWidth: 280 }}>\n//           <SearchBar value={search} onChange={(v) => { setSearch(v); setPage(1); }} />\n//         </div>\n\n//         <div className=\"d-flex gap-2 align-items-center\">\n//           <div>\n//             <select className=\"form-select\" value={pageSize} onChange={(e) => { setPageSize(Number(e.target.value)); setPage(1); }}>\n//               {[10, 25, 50, 100].map((n) => <option key={n} value={n}>{n} / page</option>)}\n//             </select>\n//           </div>\n\n//           <button className=\"btn btn-outline-secondary\" onClick={() => setFilterPopupOpen(true)}>Filter</button>\n//           <button className=\"btn btn-outline-success\" onClick={fetchUsers}>Refresh</button>\n//         </div>\n//       </div>\n\n//       {loading && <div className=\"alert alert-info\">Loading users...</div>}\n//       {error && <div className=\"alert alert-danger\">{error}</div>}\n\n//       <UserTable users={currentData} onDelete={handleDelete} onSort={handleSort} sortConfig={sortConfig} />\n\n//       <div className=\"d-flex justify-content-between align-items-center\">\n//         <div><small>Showing {(page - 1) * pageSize + 1} - {Math.min(totalItems, page * pageSize)} of {totalItems} users</small></div>\n//         <Pagination currentPage={page} totalPages={totalPages} onPageChange={(p) => setPage(p)} />\n//       </div>\n\n//       <FilterPopup visible={filterPopupOpen} onClose={() => setFilterPopupOpen(false)} onApply={(f) => { setFilters(f); setPage(1); }} initialFilters={filters} />\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useEffect","useState","UserTable","FilterPopup","getUsers","deleteUser","useNavigate","jsxDEV","_jsxDEV","UsersPage","_s","users","setUsers","filter","setFilter","sortBy","setSortBy","navigate","fetchUsers","data","handleDelete","id","user","handleFilterChange","filterValue","handleSortChange","e","target","value","filteredUsers","department","toLowerCase","sortedUsers","sort","a","b","firstName","localeCompare","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","onFilterChange","onChange","marginLeft","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/pages/UsersPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UserTable from \"../components/UserTable\";\r\nimport FilterPopup from \"../components/FilterPopup\";\r\nimport { getUsers, deleteUser } from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst UsersPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState(null);\r\n  const [sortBy, setSortBy] = useState(\"id\"); // default sort\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    const data = await getUsers();\r\n    setUsers(data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await deleteUser(id);\r\n    setUsers(users.filter((user) => user.id !== id));\r\n  };\r\n\r\n  const handleFilterChange = (filterValue) => {\r\n    setFilter(filterValue);\r\n  };\r\n\r\n  const handleSortChange = (e) => {\r\n    setSortBy(e.target.value);\r\n  };\r\n\r\n  // filtering\r\n  let filteredUsers = [...users];\r\n  if (filter) {\r\n    filteredUsers = filteredUsers.filter(\r\n      (user) => user.department.toLowerCase() === filter.toLowerCase()\r\n    );\r\n  }\r\n\r\n  // sorting\r\n  let sortedUsers = [...filteredUsers];\r\n  if (sortBy === \"id\") {\r\n    sortedUsers.sort((a, b) => a.id - b.id);\r\n  } else if (sortBy === \"firstName\") {\r\n    sortedUsers.sort((a, b) => a.firstName.localeCompare(b.firstName));\r\n  } else if (sortBy === \"department\") {\r\n    sortedUsers.sort((a, b) => a.department.localeCompare(b.department));\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Management Dashboard</h2>\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        <button onClick={() => navigate(\"/add\")}>+ Add User</button>\r\n        <FilterPopup onFilterChange={handleFilterChange} />\r\n\r\n        {/* Sort Dropdown */}\r\n        <select value={sortBy} onChange={handleSortChange} style={{ marginLeft: \"10px\" }}>\r\n          <option value=\"id\">Sort by ID</option>\r\n          <option value=\"firstName\">Sort by First Name</option>\r\n          <option value=\"department\">Sort by Department</option>\r\n        </select>\r\n      </div>\r\n\r\n      <UserTable users={sortedUsers} onDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n\r\n\r\n\r\n// import React, { useEffect, useState, useMemo } from \"react\";\r\n// import { getUsers, deleteUser } from \"../services/api\";\r\n// import UserTable from \"../components/UserTable\";\r\n// import SearchBar from \"../components/SearchBar\";\r\n// import Pagination from \"../components/Pagination\";\r\n// import FilterPopup from \"../components/FilterPopup\";\r\n\r\n// /**\r\n//  * Utility: map JSONPlaceholder user to our model\r\n//  */\r\n// function mapUser(u) {\r\n//   const nameParts = (u.name || \"\").split(\" \");\r\n//   const firstName = nameParts[0] || \"\";\r\n//   const lastName = nameParts.slice(1).join(\" \") || \"\";\r\n//   const department = (u.company && u.company.name) ? u.company.name : \"General\";\r\n//   return {\r\n//     id: u.id,\r\n//     firstName,\r\n//     lastName,\r\n//     email: u.email || \"\",\r\n//     department,\r\n//     // keep original raw for edits if needed\r\n//     raw: u,\r\n//   };\r\n// }\r\n\r\n// export default function UsersPage() {\r\n//   const [rawUsers, setRawUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // UI states\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [filters, setFilters] = useState({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" });\r\n//   const [filterPopupOpen, setFilterPopupOpen] = useState(false);\r\n//   const [pageSize, setPageSize] = useState(10);\r\n//   const [page, setPage] = useState(1);\r\n//   const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Fetch users from API\r\n//   async function fetchUsers() {\r\n//     setLoading(true);\r\n//     setError(null);\r\n//     try {\r\n//       const data = await getUsers();\r\n//       // map to our simpler model\r\n//       setRawUsers(data.map(mapUser));\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError(err.message || \"Error fetching users\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   // Delete user handler\r\n//   async function handleDelete(id) {\r\n//     try {\r\n//       await deleteUser(id); // simulated\r\n//       // remove locally to reflect UI changes\r\n//       setRawUsers((prev) => prev.filter((u) => u.id !== id));\r\n//       alert(\"User deleted (simulated)\"); // simple notification\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete user: \" + err.message);\r\n//     }\r\n//   }\r\n\r\n//   // Sort handler (toggle)\r\n//   function handleSort(key) {\r\n//     setSortConfig((prev) => {\r\n//       if (prev.key === key) {\r\n//         return { key, direction: prev.direction === \"asc\" ? \"desc\" : \"asc\" };\r\n//       } else {\r\n//         return { key, direction: \"asc\" };\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   // Apply filters + search + sort\r\n//   const processed = useMemo(() => {\r\n//     // start with rawUsers\r\n//     let items = [...rawUsers];\r\n\r\n//     // filter popup fields (exact/contains)\r\n//     if (filters.firstName) {\r\n//       items = items.filter((u) => u.firstName.toLowerCase().includes(filters.firstName.toLowerCase()));\r\n//     }\r\n//     if (filters.lastName) {\r\n//       items = items.filter((u) => u.lastName.toLowerCase().includes(filters.lastName.toLowerCase()));\r\n//     }\r\n//     if (filters.email) {\r\n//       items = items.filter((u) => u.email.toLowerCase().includes(filters.email.toLowerCase()));\r\n//     }\r\n//     if (filters.department) {\r\n//       items = items.filter((u) => u.department.toLowerCase().includes(filters.department.toLowerCase()));\r\n//     }\r\n\r\n//     // global search across fields\r\n//     if (search && search.trim() !== \"\") {\r\n//       const q = search.toLowerCase();\r\n//       items = items.filter((u) =>\r\n//         u.firstName.toLowerCase().includes(q) ||\r\n//         u.lastName.toLowerCase().includes(q) ||\r\n//         u.email.toLowerCase().includes(q) ||\r\n//         u.department.toLowerCase().includes(q)\r\n//       );\r\n//     }\r\n\r\n//     // sort\r\n//     const { key, direction } = sortConfig || {};\r\n//     if (key) {\r\n//       items.sort((a, b) => {\r\n//         const va = (a[key] || \"\").toString().toLowerCase();\r\n//         const vb = (b[key] || \"\").toString().toLowerCase();\r\n//         if (va < vb) return direction === \"asc\" ? -1 : 1;\r\n//         if (va > vb) return direction === \"asc\" ? 1 : -1;\r\n//         return 0;\r\n//       });\r\n//     }\r\n\r\n//     return items;\r\n//   }, [rawUsers, search, filters, sortConfig]);\r\n\r\n//   // pagination calculations\r\n//   const totalItems = processed.length;\r\n//   const totalPages = Math.max(1, Math.ceil(totalItems / pageSize));\r\n//   // adjust page if current page out of range\r\n//   useEffect(() => {\r\n//     if (page > totalPages) setPage(totalPages);\r\n//   }, [totalPages, page]);\r\n\r\n//   const currentData = processed.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"d-flex flex-column flex-md-row align-items-start gap-3 justify-content-between mb-3\">\r\n//         <div style={{ flex: 1, minWidth: 280 }}>\r\n//           <SearchBar value={search} onChange={(v) => { setSearch(v); setPage(1); }} />\r\n//         </div>\r\n\r\n//         <div className=\"d-flex gap-2 align-items-center\">\r\n//           <div>\r\n//             <select className=\"form-select\" value={pageSize} onChange={(e) => { setPageSize(Number(e.target.value)); setPage(1); }}>\r\n//               {[10, 25, 50, 100].map((n) => <option key={n} value={n}>{n} / page</option>)}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <button className=\"btn btn-outline-secondary\" onClick={() => setFilterPopupOpen(true)}>Filter</button>\r\n//           <button className=\"btn btn-outline-success\" onClick={fetchUsers}>Refresh</button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {loading && <div className=\"alert alert-info\">Loading users...</div>}\r\n//       {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n//       <UserTable users={currentData} onDelete={handleDelete} onSort={handleSort} sortConfig={sortConfig} />\r\n\r\n//       <div className=\"d-flex justify-content-between align-items-center\">\r\n//         <div><small>Showing {(page - 1) * pageSize + 1} - {Math.min(totalItems, page * pageSize)} of {totalItems} users</small></div>\r\n//         <Pagination currentPage={page} totalPages={totalPages} onPageChange={(p) => setPage(p)} />\r\n//       </div>\r\n\r\n//       <FilterPopup visible={filterPopupOpen} onClose={() => setFilterPopupOpen(false)} onApply={(f) => { setFilters(f); setPage(1); }} initialFilters={filters} />\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}