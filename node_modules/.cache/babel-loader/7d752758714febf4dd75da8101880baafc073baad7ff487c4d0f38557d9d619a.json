{"ast":null,"code":"/**\r\n * Validation helpers for the user form.\r\n */\n\n/**\r\n * Very small email regex for client-side validation.\r\n */\nexport function isValidEmail(email) {\n  const re = /^\\S+@\\S+\\.\\S+$/;\n  return re.test(String(email).toLowerCase());\n}\n\n/**\r\n * Validate user form fields.\r\n * Expecting an object: { firstName, lastName, email, department }\r\n * Returns { valid: boolean, errors: { field: message } }\r\n */\nexport function validateUser(user) {\n  const errors = {};\n  if (!user.firstName || user.firstName.trim() === \"\") {\n    errors.firstName = \"First name is required\";\n  }\n  if (!user.lastName || user.lastName.trim() === \"\") {\n    errors.lastName = \"Last name is required\";\n  }\n  if (!user.email || user.email.trim() === \"\") {\n    errors.email = \"Email is required\";\n  } else if (!isValidEmail(user.email)) {\n    errors.email = \"Please enter a valid email address\";\n  }\n  // department is optional but let's enforce non-empty if provided\n  if (user.department === undefined || user.department === null) {\n    user.department = \"\";\n  }\n  return {\n    valid: Object.keys(errors).length === 0,\n    errors\n  };\n}","map":{"version":3,"names":["isValidEmail","email","re","test","String","toLowerCase","validateUser","user","errors","firstName","trim","lastName","department","undefined","valid","Object","keys","length"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/utils/validation.js"],"sourcesContent":["/**\r\n * Validation helpers for the user form.\r\n */\r\n\r\n/**\r\n * Very small email regex for client-side validation.\r\n */\r\nexport function isValidEmail(email) {\r\n  const re = /^\\S+@\\S+\\.\\S+$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\n/**\r\n * Validate user form fields.\r\n * Expecting an object: { firstName, lastName, email, department }\r\n * Returns { valid: boolean, errors: { field: message } }\r\n */\r\nexport function validateUser(user) {\r\n  const errors = {};\r\n  if (!user.firstName || user.firstName.trim() === \"\") {\r\n    errors.firstName = \"First name is required\";\r\n  }\r\n  if (!user.lastName || user.lastName.trim() === \"\") {\r\n    errors.lastName = \"Last name is required\";\r\n  }\r\n  if (!user.email || user.email.trim() === \"\") {\r\n    errors.email = \"Email is required\";\r\n  } else if (!isValidEmail(user.email)) {\r\n    errors.email = \"Please enter a valid email address\";\r\n  }\r\n  // department is optional but let's enforce non-empty if provided\r\n  if (user.department === undefined || user.department === null) {\r\n    user.department = \"\";\r\n  }\r\n  return { valid: Object.keys(errors).length === 0, errors };\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,KAAK,EAAE;EAClC,MAAMC,EAAE,GAAG,gBAAgB;EAC3B,OAAOA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAE;EACjC,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAI,CAACD,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACnDF,MAAM,CAACC,SAAS,GAAG,wBAAwB;EAC7C;EACA,IAAI,CAACF,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACI,QAAQ,CAACD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACjDF,MAAM,CAACG,QAAQ,GAAG,uBAAuB;EAC3C;EACA,IAAI,CAACJ,IAAI,CAACN,KAAK,IAAIM,IAAI,CAACN,KAAK,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3CF,MAAM,CAACP,KAAK,GAAG,mBAAmB;EACpC,CAAC,MAAM,IAAI,CAACD,YAAY,CAACO,IAAI,CAACN,KAAK,CAAC,EAAE;IACpCO,MAAM,CAACP,KAAK,GAAG,oCAAoC;EACrD;EACA;EACA,IAAIM,IAAI,CAACK,UAAU,KAAKC,SAAS,IAAIN,IAAI,CAACK,UAAU,KAAK,IAAI,EAAE;IAC7DL,IAAI,CAACK,UAAU,GAAG,EAAE;EACtB;EACA,OAAO;IAAEE,KAAK,EAAEC,MAAM,CAACC,IAAI,CAACR,MAAM,CAAC,CAACS,MAAM,KAAK,CAAC;IAAET;EAAO,CAAC;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}