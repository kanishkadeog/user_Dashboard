{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmayu\\\\OneDrive\\\\Desktop\\\\kanishka\\\\project\\\\extra\\\\user_Dashboard\\\\user_dashboard\\\\src\\\\pages\\\\UsersPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getUsers, deleteUser } from \"../services/api\";\nimport UserTable from \"../components/UserTable\";\nimport Pagination from \"../components/Pagination\";\nimport SearchBar from \"../components/SearchBar\";\nimport FilterPopup from \"../components/FilterPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filters, setFilters] = useState({});\n  const [sortField, setSortField] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageLimit, setPageLimit] = useState(10);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const data = await getUsers();\n      // Add department manually (mock API doesnâ€™t provide it)\n      const withDept = data.map((user, index) => ({\n        ...user,\n        department: [\"IT\", \"HR\", \"Finance\", \"Marketing\"][index % 4]\n      }));\n      setUsers(withDept);\n    } catch (error) {\n      alert(\"Failed to fetch users\");\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteUser(id);\n      setUsers(users.filter(u => u.id !== id));\n    } catch (error) {\n      alert(\"Failed to delete user\");\n    }\n  };\n  const handleEdit = user => {\n    alert(`Navigate to Edit Page for User ID: ${user.id}`);\n    // Normally use React Router to navigate\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n  };\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n    setCurrentPage(1);\n  };\n  const handleSort = field => {\n    setSortField(field);\n  };\n\n  // Filtering logic\n  const filteredUsers = users.filter(user => {\n    const [firstName, lastName] = user.name.split(\" \");\n    const matchSearch = !searchQuery || user.name.toLowerCase().includes(searchQuery.toLowerCase()) || user.email.toLowerCase().includes(searchQuery.toLowerCase()) || user.department.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchFirst = !filters.firstName || (firstName === null || firstName === void 0 ? void 0 : firstName.toLowerCase().includes(filters.firstName.toLowerCase()));\n    const matchLast = !filters.lastName || (lastName === null || lastName === void 0 ? void 0 : lastName.toLowerCase().includes(filters.lastName.toLowerCase()));\n    const matchEmail = !filters.email || user.email.toLowerCase().includes(filters.email.toLowerCase());\n    const matchDept = !filters.department || user.department.toLowerCase() === filters.department.toLowerCase();\n    return matchSearch && matchFirst && matchLast && matchEmail && matchDept;\n  });\n\n  // Sorting logic\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\n    var _a$sortField, _b$sortField;\n    if (!sortField) return 0;\n    if (sortField === \"firstName\") {\n      return a.name.split(\" \")[0].localeCompare(b.name.split(\" \")[0]);\n    }\n    if (sortField === \"lastName\") {\n      return (a.name.split(\" \")[1] || \"\").localeCompare(b.name.split(\" \")[1] || \"\");\n    }\n    return (_a$sortField = a[sortField]) === null || _a$sortField === void 0 ? void 0 : _a$sortField.toString().localeCompare((_b$sortField = b[sortField]) === null || _b$sortField === void 0 ? void 0 : _b$sortField.toString());\n  });\n\n  // Pagination logic\n  const startIndex = (currentPage - 1) * pageLimit;\n  const paginatedUsers = sortedUsers.slice(startIndex, startIndex + pageLimit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterPopup, {\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"Navigate to Add User Page\"),\n        children: \"+ Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n      users: paginatedUsers,\n      onEdit: handleEdit,\n      onDelete: handleDelete,\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalItems: sortedUsers.length,\n      pageLimit: pageLimit,\n      onPageChange: setCurrentPage,\n      onLimitChange: setPageLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"7fFNpXuyn24SdlLfg7nt61s6aXY=\");\n_c = UsersPage;\nexport default UsersPage;\n\n// import React, { useEffect, useState, useMemo } from \"react\";\n// import { getUsers, deleteUser } from \"../services/api\";\n// import UserTable from \"../components/UserTable\";\n// import SearchBar from \"../components/SearchBar\";\n// import Pagination from \"../components/Pagination\";\n// import FilterPopup from \"../components/FilterPopup\";\n\n// /**\n//  * Utility: map JSONPlaceholder user to our model\n//  */\n// function mapUser(u) {\n//   const nameParts = (u.name || \"\").split(\" \");\n//   const firstName = nameParts[0] || \"\";\n//   const lastName = nameParts.slice(1).join(\" \") || \"\";\n//   const department = (u.company && u.company.name) ? u.company.name : \"General\";\n//   return {\n//     id: u.id,\n//     firstName,\n//     lastName,\n//     email: u.email || \"\",\n//     department,\n//     // keep original raw for edits if needed\n//     raw: u,\n//   };\n// }\n\n// export default function UsersPage() {\n//   const [rawUsers, setRawUsers] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // UI states\n//   const [search, setSearch] = useState(\"\");\n//   const [filters, setFilters] = useState({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" });\n//   const [filterPopupOpen, setFilterPopupOpen] = useState(false);\n//   const [pageSize, setPageSize] = useState(10);\n//   const [page, setPage] = useState(1);\n//   const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   // Fetch users from API\n//   async function fetchUsers() {\n//     setLoading(true);\n//     setError(null);\n//     try {\n//       const data = await getUsers();\n//       // map to our simpler model\n//       setRawUsers(data.map(mapUser));\n//     } catch (err) {\n//       console.error(err);\n//       setError(err.message || \"Error fetching users\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   // Delete user handler\n//   async function handleDelete(id) {\n//     try {\n//       await deleteUser(id); // simulated\n//       // remove locally to reflect UI changes\n//       setRawUsers((prev) => prev.filter((u) => u.id !== id));\n//       alert(\"User deleted (simulated)\"); // simple notification\n//     } catch (err) {\n//       alert(\"Failed to delete user: \" + err.message);\n//     }\n//   }\n\n//   // Sort handler (toggle)\n//   function handleSort(key) {\n//     setSortConfig((prev) => {\n//       if (prev.key === key) {\n//         return { key, direction: prev.direction === \"asc\" ? \"desc\" : \"asc\" };\n//       } else {\n//         return { key, direction: \"asc\" };\n//       }\n//     });\n//   }\n\n//   // Apply filters + search + sort\n//   const processed = useMemo(() => {\n//     // start with rawUsers\n//     let items = [...rawUsers];\n\n//     // filter popup fields (exact/contains)\n//     if (filters.firstName) {\n//       items = items.filter((u) => u.firstName.toLowerCase().includes(filters.firstName.toLowerCase()));\n//     }\n//     if (filters.lastName) {\n//       items = items.filter((u) => u.lastName.toLowerCase().includes(filters.lastName.toLowerCase()));\n//     }\n//     if (filters.email) {\n//       items = items.filter((u) => u.email.toLowerCase().includes(filters.email.toLowerCase()));\n//     }\n//     if (filters.department) {\n//       items = items.filter((u) => u.department.toLowerCase().includes(filters.department.toLowerCase()));\n//     }\n\n//     // global search across fields\n//     if (search && search.trim() !== \"\") {\n//       const q = search.toLowerCase();\n//       items = items.filter((u) =>\n//         u.firstName.toLowerCase().includes(q) ||\n//         u.lastName.toLowerCase().includes(q) ||\n//         u.email.toLowerCase().includes(q) ||\n//         u.department.toLowerCase().includes(q)\n//       );\n//     }\n\n//     // sort\n//     const { key, direction } = sortConfig || {};\n//     if (key) {\n//       items.sort((a, b) => {\n//         const va = (a[key] || \"\").toString().toLowerCase();\n//         const vb = (b[key] || \"\").toString().toLowerCase();\n//         if (va < vb) return direction === \"asc\" ? -1 : 1;\n//         if (va > vb) return direction === \"asc\" ? 1 : -1;\n//         return 0;\n//       });\n//     }\n\n//     return items;\n//   }, [rawUsers, search, filters, sortConfig]);\n\n//   // pagination calculations\n//   const totalItems = processed.length;\n//   const totalPages = Math.max(1, Math.ceil(totalItems / pageSize));\n//   // adjust page if current page out of range\n//   useEffect(() => {\n//     if (page > totalPages) setPage(totalPages);\n//   }, [totalPages, page]);\n\n//   const currentData = processed.slice((page - 1) * pageSize, page * pageSize);\n\n//   return (\n//     <div>\n//       <div className=\"d-flex flex-column flex-md-row align-items-start gap-3 justify-content-between mb-3\">\n//         <div style={{ flex: 1, minWidth: 280 }}>\n//           <SearchBar value={search} onChange={(v) => { setSearch(v); setPage(1); }} />\n//         </div>\n\n//         <div className=\"d-flex gap-2 align-items-center\">\n//           <div>\n//             <select className=\"form-select\" value={pageSize} onChange={(e) => { setPageSize(Number(e.target.value)); setPage(1); }}>\n//               {[10, 25, 50, 100].map((n) => <option key={n} value={n}>{n} / page</option>)}\n//             </select>\n//           </div>\n\n//           <button className=\"btn btn-outline-secondary\" onClick={() => setFilterPopupOpen(true)}>Filter</button>\n//           <button className=\"btn btn-outline-success\" onClick={fetchUsers}>Refresh</button>\n//         </div>\n//       </div>\n\n//       {loading && <div className=\"alert alert-info\">Loading users...</div>}\n//       {error && <div className=\"alert alert-danger\">{error}</div>}\n\n//       <UserTable users={currentData} onDelete={handleDelete} onSort={handleSort} sortConfig={sortConfig} />\n\n//       <div className=\"d-flex justify-content-between align-items-center\">\n//         <div><small>Showing {(page - 1) * pageSize + 1} - {Math.min(totalItems, page * pageSize)} of {totalItems} users</small></div>\n//         <Pagination currentPage={page} totalPages={totalPages} onPageChange={(p) => setPage(p)} />\n//       </div>\n\n//       <FilterPopup visible={filterPopupOpen} onClose={() => setFilterPopupOpen(false)} onApply={(f) => { setFilters(f); setPage(1); }} initialFilters={filters} />\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useEffect","useState","getUsers","deleteUser","UserTable","Pagination","SearchBar","FilterPopup","jsxDEV","_jsxDEV","UsersPage","_s","users","setUsers","searchQuery","setSearchQuery","filters","setFilters","sortField","setSortField","currentPage","setCurrentPage","pageLimit","setPageLimit","fetchUsers","data","withDept","map","user","index","department","error","alert","handleDelete","id","filter","u","handleEdit","handleSearch","query","handleFilterChange","newFilters","handleSort","field","filteredUsers","firstName","lastName","name","split","matchSearch","toLowerCase","includes","email","matchFirst","matchLast","matchEmail","matchDept","sortedUsers","sort","a","b","_a$sortField","_b$sortField","localeCompare","toString","startIndex","paginatedUsers","slice","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","display","gap","onSearch","onFilterChange","onClick","onEdit","onDelete","onSort","totalItems","length","onPageChange","onLimitChange","_c","$RefreshReg$"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/pages/UsersPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getUsers, deleteUser } from \"../services/api\";\r\nimport UserTable from \"../components/UserTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport FilterPopup from \"../components/FilterPopup\";\r\n\r\nconst UsersPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filters, setFilters] = useState({});\r\n  const [sortField, setSortField] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageLimit, setPageLimit] = useState(10);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const data = await getUsers();\r\n      // Add department manually (mock API doesnâ€™t provide it)\r\n      const withDept = data.map((user, index) => ({\r\n        ...user,\r\n        department: [\"IT\", \"HR\", \"Finance\", \"Marketing\"][index % 4],\r\n      }));\r\n      setUsers(withDept);\r\n    } catch (error) {\r\n      alert(\"Failed to fetch users\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteUser(id);\r\n      setUsers(users.filter((u) => u.id !== id));\r\n    } catch (error) {\r\n      alert(\"Failed to delete user\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    alert(`Navigate to Edit Page for User ID: ${user.id}`);\r\n    // Normally use React Router to navigate\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    setSortField(field);\r\n  };\r\n\r\n  // Filtering logic\r\n  const filteredUsers = users.filter((user) => {\r\n    const [firstName, lastName] = user.name.split(\" \");\r\n\r\n    const matchSearch =\r\n      !searchQuery ||\r\n      user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      user.department.toLowerCase().includes(searchQuery.toLowerCase());\r\n\r\n    const matchFirst =\r\n      !filters.firstName ||\r\n      firstName?.toLowerCase().includes(filters.firstName.toLowerCase());\r\n\r\n    const matchLast =\r\n      !filters.lastName ||\r\n      lastName?.toLowerCase().includes(filters.lastName.toLowerCase());\r\n\r\n    const matchEmail =\r\n      !filters.email ||\r\n      user.email.toLowerCase().includes(filters.email.toLowerCase());\r\n\r\n    const matchDept =\r\n      !filters.department ||\r\n      user.department.toLowerCase() === filters.department.toLowerCase();\r\n\r\n    return matchSearch && matchFirst && matchLast && matchEmail && matchDept;\r\n  });\r\n\r\n  // Sorting logic\r\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\r\n    if (!sortField) return 0;\r\n    if (sortField === \"firstName\") {\r\n      return a.name.split(\" \")[0].localeCompare(b.name.split(\" \")[0]);\r\n    }\r\n    if (sortField === \"lastName\") {\r\n      return (a.name.split(\" \")[1] || \"\").localeCompare(\r\n        b.name.split(\" \")[1] || \"\"\r\n      );\r\n    }\r\n    return a[sortField]?.toString().localeCompare(b[sortField]?.toString());\r\n  });\r\n\r\n  // Pagination logic\r\n  const startIndex = (currentPage - 1) * pageLimit;\r\n  const paginatedUsers = sortedUsers.slice(\r\n    startIndex,\r\n    startIndex + pageLimit\r\n  );\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Management Dashboard</h2>\r\n\r\n      {/* Toolbar */}\r\n      <div style={{ marginBottom: \"20px\", display: \"flex\", gap: \"10px\" }}>\r\n        <SearchBar onSearch={handleSearch} />\r\n        <FilterPopup onFilterChange={handleFilterChange} />\r\n        <button onClick={() => alert(\"Navigate to Add User Page\")}>\r\n          + Add User\r\n        </button>\r\n      </div>\r\n\r\n      {/* User Table */}\r\n      <UserTable\r\n        users={paginatedUsers}\r\n        onEdit={handleEdit}\r\n        onDelete={handleDelete}\r\n        onSort={handleSort}\r\n      />\r\n\r\n      {/* Pagination */}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalItems={sortedUsers.length}\r\n        pageLimit={pageLimit}\r\n        onPageChange={setCurrentPage}\r\n        onLimitChange={setPageLimit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState, useMemo } from \"react\";\r\n// import { getUsers, deleteUser } from \"../services/api\";\r\n// import UserTable from \"../components/UserTable\";\r\n// import SearchBar from \"../components/SearchBar\";\r\n// import Pagination from \"../components/Pagination\";\r\n// import FilterPopup from \"../components/FilterPopup\";\r\n\r\n// /**\r\n//  * Utility: map JSONPlaceholder user to our model\r\n//  */\r\n// function mapUser(u) {\r\n//   const nameParts = (u.name || \"\").split(\" \");\r\n//   const firstName = nameParts[0] || \"\";\r\n//   const lastName = nameParts.slice(1).join(\" \") || \"\";\r\n//   const department = (u.company && u.company.name) ? u.company.name : \"General\";\r\n//   return {\r\n//     id: u.id,\r\n//     firstName,\r\n//     lastName,\r\n//     email: u.email || \"\",\r\n//     department,\r\n//     // keep original raw for edits if needed\r\n//     raw: u,\r\n//   };\r\n// }\r\n\r\n// export default function UsersPage() {\r\n//   const [rawUsers, setRawUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // UI states\r\n//   const [search, setSearch] = useState(\"\");\r\n//   const [filters, setFilters] = useState({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" });\r\n//   const [filterPopupOpen, setFilterPopupOpen] = useState(false);\r\n//   const [pageSize, setPageSize] = useState(10);\r\n//   const [page, setPage] = useState(1);\r\n//   const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Fetch users from API\r\n//   async function fetchUsers() {\r\n//     setLoading(true);\r\n//     setError(null);\r\n//     try {\r\n//       const data = await getUsers();\r\n//       // map to our simpler model\r\n//       setRawUsers(data.map(mapUser));\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       setError(err.message || \"Error fetching users\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   // Delete user handler\r\n//   async function handleDelete(id) {\r\n//     try {\r\n//       await deleteUser(id); // simulated\r\n//       // remove locally to reflect UI changes\r\n//       setRawUsers((prev) => prev.filter((u) => u.id !== id));\r\n//       alert(\"User deleted (simulated)\"); // simple notification\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete user: \" + err.message);\r\n//     }\r\n//   }\r\n\r\n//   // Sort handler (toggle)\r\n//   function handleSort(key) {\r\n//     setSortConfig((prev) => {\r\n//       if (prev.key === key) {\r\n//         return { key, direction: prev.direction === \"asc\" ? \"desc\" : \"asc\" };\r\n//       } else {\r\n//         return { key, direction: \"asc\" };\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   // Apply filters + search + sort\r\n//   const processed = useMemo(() => {\r\n//     // start with rawUsers\r\n//     let items = [...rawUsers];\r\n\r\n//     // filter popup fields (exact/contains)\r\n//     if (filters.firstName) {\r\n//       items = items.filter((u) => u.firstName.toLowerCase().includes(filters.firstName.toLowerCase()));\r\n//     }\r\n//     if (filters.lastName) {\r\n//       items = items.filter((u) => u.lastName.toLowerCase().includes(filters.lastName.toLowerCase()));\r\n//     }\r\n//     if (filters.email) {\r\n//       items = items.filter((u) => u.email.toLowerCase().includes(filters.email.toLowerCase()));\r\n//     }\r\n//     if (filters.department) {\r\n//       items = items.filter((u) => u.department.toLowerCase().includes(filters.department.toLowerCase()));\r\n//     }\r\n\r\n//     // global search across fields\r\n//     if (search && search.trim() !== \"\") {\r\n//       const q = search.toLowerCase();\r\n//       items = items.filter((u) =>\r\n//         u.firstName.toLowerCase().includes(q) ||\r\n//         u.lastName.toLowerCase().includes(q) ||\r\n//         u.email.toLowerCase().includes(q) ||\r\n//         u.department.toLowerCase().includes(q)\r\n//       );\r\n//     }\r\n\r\n//     // sort\r\n//     const { key, direction } = sortConfig || {};\r\n//     if (key) {\r\n//       items.sort((a, b) => {\r\n//         const va = (a[key] || \"\").toString().toLowerCase();\r\n//         const vb = (b[key] || \"\").toString().toLowerCase();\r\n//         if (va < vb) return direction === \"asc\" ? -1 : 1;\r\n//         if (va > vb) return direction === \"asc\" ? 1 : -1;\r\n//         return 0;\r\n//       });\r\n//     }\r\n\r\n//     return items;\r\n//   }, [rawUsers, search, filters, sortConfig]);\r\n\r\n//   // pagination calculations\r\n//   const totalItems = processed.length;\r\n//   const totalPages = Math.max(1, Math.ceil(totalItems / pageSize));\r\n//   // adjust page if current page out of range\r\n//   useEffect(() => {\r\n//     if (page > totalPages) setPage(totalPages);\r\n//   }, [totalPages, page]);\r\n\r\n//   const currentData = processed.slice((page - 1) * pageSize, page * pageSize);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"d-flex flex-column flex-md-row align-items-start gap-3 justify-content-between mb-3\">\r\n//         <div style={{ flex: 1, minWidth: 280 }}>\r\n//           <SearchBar value={search} onChange={(v) => { setSearch(v); setPage(1); }} />\r\n//         </div>\r\n\r\n//         <div className=\"d-flex gap-2 align-items-center\">\r\n//           <div>\r\n//             <select className=\"form-select\" value={pageSize} onChange={(e) => { setPageSize(Number(e.target.value)); setPage(1); }}>\r\n//               {[10, 25, 50, 100].map((n) => <option key={n} value={n}>{n} / page</option>)}\r\n//             </select>\r\n//           </div>\r\n\r\n//           <button className=\"btn btn-outline-secondary\" onClick={() => setFilterPopupOpen(true)}>Filter</button>\r\n//           <button className=\"btn btn-outline-success\" onClick={fetchUsers}>Refresh</button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {loading && <div className=\"alert alert-info\">Loading users...</div>}\r\n//       {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n//       <UserTable users={currentData} onDelete={handleDelete} onSort={handleSort} sortConfig={sortConfig} />\r\n\r\n//       <div className=\"d-flex justify-content-between align-items-center\">\r\n//         <div><small>Showing {(page - 1) * pageSize + 1} - {Math.min(totalItems, page * pageSize)} of {totalItems} users</small></div>\r\n//         <Pagination currentPage={page} totalPages={totalPages} onPageChange={(p) => setPage(p)} />\r\n//       </div>\r\n\r\n//       <FilterPopup visible={filterPopupOpen} onClose={() => setFilterPopupOpen(false)} onApply={(f) => { setFilters(f); setPage(1); }} initialFilters={filters} />\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,UAAU,QAAQ,iBAAiB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdwB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMvB,QAAQ,CAAC,CAAC;MAC7B;MACA,MAAMwB,QAAQ,GAAGD,IAAI,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;QAC1C,GAAGD,IAAI;QACPE,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,CAAC,CAACD,KAAK,GAAG,CAAC;MAC5D,CAAC,CAAC,CAAC;MACHhB,QAAQ,CAACa,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAM/B,UAAU,CAAC+B,EAAE,CAAC;MACpBrB,QAAQ,CAACD,KAAK,CAACuB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,MAAMK,UAAU,GAAIT,IAAI,IAAK;IAC3BI,KAAK,CAAC,sCAAsCJ,IAAI,CAACM,EAAE,EAAE,CAAC;IACtD;EACF,CAAC;EAED,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9BxB,cAAc,CAACwB,KAAK,CAAC;IACrBlB,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMmB,kBAAkB,GAAIC,UAAU,IAAK;IACzCxB,UAAU,CAACwB,UAAU,CAAC;IACtBpB,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMqB,UAAU,GAAIC,KAAK,IAAK;IAC5BxB,YAAY,CAACwB,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGhC,KAAK,CAACuB,MAAM,CAAEP,IAAI,IAAK;IAC3C,MAAM,CAACiB,SAAS,EAAEC,QAAQ,CAAC,GAAGlB,IAAI,CAACmB,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAElD,MAAMC,WAAW,GACf,CAACnC,WAAW,IACZc,IAAI,CAACmB,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrC,WAAW,CAACoC,WAAW,CAAC,CAAC,CAAC,IAC3DtB,IAAI,CAACwB,KAAK,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrC,WAAW,CAACoC,WAAW,CAAC,CAAC,CAAC,IAC5DtB,IAAI,CAACE,UAAU,CAACoB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrC,WAAW,CAACoC,WAAW,CAAC,CAAC,CAAC;IAEnE,MAAMG,UAAU,GACd,CAACrC,OAAO,CAAC6B,SAAS,KAClBA,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnC,OAAO,CAAC6B,SAAS,CAACK,WAAW,CAAC,CAAC,CAAC;IAEpE,MAAMI,SAAS,GACb,CAACtC,OAAO,CAAC8B,QAAQ,KACjBA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnC,OAAO,CAAC8B,QAAQ,CAACI,WAAW,CAAC,CAAC,CAAC;IAElE,MAAMK,UAAU,GACd,CAACvC,OAAO,CAACoC,KAAK,IACdxB,IAAI,CAACwB,KAAK,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnC,OAAO,CAACoC,KAAK,CAACF,WAAW,CAAC,CAAC,CAAC;IAEhE,MAAMM,SAAS,GACb,CAACxC,OAAO,CAACc,UAAU,IACnBF,IAAI,CAACE,UAAU,CAACoB,WAAW,CAAC,CAAC,KAAKlC,OAAO,CAACc,UAAU,CAACoB,WAAW,CAAC,CAAC;IAEpE,OAAOD,WAAW,IAAII,UAAU,IAAIC,SAAS,IAAIC,UAAU,IAAIC,SAAS;EAC1E,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAG,CAAC,GAAGb,aAAa,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAAA,IAAAC,YAAA,EAAAC,YAAA;IACpD,IAAI,CAAC5C,SAAS,EAAE,OAAO,CAAC;IACxB,IAAIA,SAAS,KAAK,WAAW,EAAE;MAC7B,OAAOyC,CAAC,CAACZ,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACe,aAAa,CAACH,CAAC,CAACb,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE;IACA,IAAI9B,SAAS,KAAK,UAAU,EAAE;MAC5B,OAAO,CAACyC,CAAC,CAACZ,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAEe,aAAa,CAC/CH,CAAC,CAACb,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAC1B,CAAC;IACH;IACA,QAAAa,YAAA,GAAOF,CAAC,CAACzC,SAAS,CAAC,cAAA2C,YAAA,uBAAZA,YAAA,CAAcG,QAAQ,CAAC,CAAC,CAACD,aAAa,EAAAD,YAAA,GAACF,CAAC,CAAC1C,SAAS,CAAC,cAAA4C,YAAA,uBAAZA,YAAA,CAAcE,QAAQ,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAG,CAAC7C,WAAW,GAAG,CAAC,IAAIE,SAAS;EAChD,MAAM4C,cAAc,GAAGT,WAAW,CAACU,KAAK,CACtCF,UAAU,EACVA,UAAU,GAAG3C,SACf,CAAC;EAED,oBACEb,OAAA;IAAK2D,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B7D,OAAA;MAAA6D,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlCjE,OAAA;MAAK2D,KAAK,EAAE;QAAEO,YAAY,EAAE,MAAM;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAP,QAAA,gBACjE7D,OAAA,CAACH,SAAS;QAACwE,QAAQ,EAAExC;MAAa;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCjE,OAAA,CAACF,WAAW;QAACwE,cAAc,EAAEvC;MAAmB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDjE,OAAA;QAAQuE,OAAO,EAAEA,CAAA,KAAMhD,KAAK,CAAC,2BAA2B,CAAE;QAAAsC,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNjE,OAAA,CAACL,SAAS;MACRQ,KAAK,EAAEsD,cAAe;MACtBe,MAAM,EAAE5C,UAAW;MACnB6C,QAAQ,EAAEjD,YAAa;MACvBkD,MAAM,EAAEzC;IAAW;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAGFjE,OAAA,CAACJ,UAAU;MACTe,WAAW,EAAEA,WAAY;MACzBgE,UAAU,EAAE3B,WAAW,CAAC4B,MAAO;MAC/B/D,SAAS,EAAEA,SAAU;MACrBgE,YAAY,EAAEjE,cAAe;MAC7BkE,aAAa,EAAEhE;IAAa;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/D,EAAA,CAvIID,SAAS;AAAA8E,EAAA,GAAT9E,SAAS;AAyIf,eAAeA,SAAS;;AAKxignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}