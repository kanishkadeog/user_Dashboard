{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmayu\\\\OneDrive\\\\Desktop\\\\kanishka\\\\project\\\\extra\\\\user_Dashboard\\\\user_dashboard\\\\src\\\\components\\\\FilterPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form, Offcanvas } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FilterPopup = ({\n  onFilterChange\n}) => {\n  _s();\n  const [filters, setFilters] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    department: \"\"\n  });\n  const [show, setShow] = useState(false);\n  const handleChange = e => {\n    const newFilters = {\n      ...filters,\n      [e.target.name]: e.target.value\n    };\n    setFilters(newFilters);\n    onFilterChange(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => setShow(true),\n      children: \"Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: () => setShow(false),\n      placement: \"end\",\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Filter Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              value: filters.firstName,\n              onChange: handleChange,\n              placeholder: \"Filter by First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              value: filters.lastName,\n              onChange: handleChange,\n              placeholder: \"Filter by Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"email\",\n              value: filters.email,\n              onChange: handleChange,\n              placeholder: \"Filter by Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"department\",\n              value: filters.department,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Departments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IT\",\n                children: \"IT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"HR\",\n                children: \"HR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Finance\",\n                children: \"Finance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Marketing\",\n                children: \"Marketing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FilterPopup, \"7S5Ojrlip59i7DBpX/BmcLbRcTQ=\");\n_c = FilterPopup;\nexport default FilterPopup;\n\n//=========================\n\n// import React, { useState } from \"react\";\n\n// const FilterPopup = ({ onFilterChange }) => {\n//   const [filters, setFilters] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     department: \"\",\n//   });\n//   const [show, setShow] = useState(false);\n\n//   const handleChange = (e) => {\n//     const newFilters = { ...filters, [e.target.name]: e.target.value };\n//     setFilters(newFilters);\n//     onFilterChange(newFilters);\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       <button onClick={() => setShow(!show)}>Filters</button>\n//       {show && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"35px\",\n//             left: \"0\",\n//             backgroundColor: \"#fff\",\n//             border: \"1px solid #ccc\",\n//             borderRadius: \"4px\",\n//             padding: \"10px\",\n//             zIndex: 10,\n//             minWidth: \"200px\",\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.15)\",\n//           }}\n//         >\n//           <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\n//             <input\n//               type=\"text\"\n//               name=\"firstName\"\n//               placeholder=\"Filter by First Name\"\n//               value={filters.firstName}\n//               onChange={handleChange}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"lastName\"\n//               placeholder=\"Filter by Last Name\"\n//               value={filters.lastName}\n//               onChange={handleChange}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"email\"\n//               placeholder=\"Filter by Email\"\n//               value={filters.email}\n//               onChange={handleChange}\n//             />\n//             <select name=\"department\" value={filters.department} onChange={handleChange}>\n//               <option value=\"\">All Departments</option>\n//               <option value=\"IT\">IT</option>\n//               <option value=\"HR\">HR</option>\n//               <option value=\"Finance\">Finance</option>\n//               <option value=\"Marketing\">Marketing</option>\n//             </select>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FilterPopup;\n\n//===============================\n\n// import React, { useState } from \"react\";\n\n// const FilterPopup = ({ onFilterChange }) => {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [filters, setFilters] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     department: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleApply = () => {\n//     onFilterChange(filters);\n//     setIsOpen(false);\n//   };\n\n//   const handleClear = () => {\n//     const cleared = { firstName: \"\", lastName: \"\", email: \"\", department: \"\" };\n//     setFilters(cleared);\n//     onFilterChange(cleared);\n//     setIsOpen(false);\n//   };\n\n//   return (\n//     <div style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\n//       <button onClick={() => setIsOpen(!isOpen)}>Filter</button>\n\n//       {isOpen && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             marginTop: \"5px\",\n//             padding: \"15px\",\n//             border: \"1px solid #ccc\",\n//             borderRadius: \"4px\",\n//             backgroundColor: \"#fff\",\n//             zIndex: 1000,\n//             width: \"250px\",\n//           }}\n//         >\n//           <h4 style={{ marginTop: 0 }}>Filter Users</h4>\n\n//           {/* First Name */}\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\n//             First Name:\n//           </label>\n//           <input\n//             type=\"text\"\n//             name=\"firstName\"\n//             value={filters.firstName}\n//             onChange={handleChange}\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\n//           />\n\n//           {/* Last Name */}\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\n//             Last Name:\n//           </label>\n//           <input\n//             type=\"text\"\n//             name=\"lastName\"\n//             value={filters.lastName}\n//             onChange={handleChange}\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\n//           />\n\n//           {/* Email */}\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\n//             Email:\n//           </label>\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={filters.email}\n//             onChange={handleChange}\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\n//           />\n\n//           {/* Department */}\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\n//             Department:\n//           </label>\n//           <select\n//             name=\"department\"\n//             value={filters.department}\n//             onChange={handleChange}\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\n//           >\n//             <option value=\"\">-- Select Department --</option>\n//             <option value=\"IT\">IT</option>\n//             <option value=\"HR\">HR</option>\n//             <option value=\"Finance\">Finance</option>\n//             <option value=\"Marketing\">Marketing</option>\n//           </select>\n\n//           {/* Buttons */}\n//           <div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\n//             <button onClick={handleApply}>Apply</button>\n//             <button onClick={handleClear} style={{ marginLeft: \"8px\" }}>\n//               Clear\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FilterPopup;\n\n// import React, { useState, useEffect } from \"react\";\n\n// /**\n//  * Filter popup component\n//  * Props:\n//  *  - visible (bool)\n//  *  - onClose()\n//  *  - onApply(filters)\n//  *  - initialFilters\n//  */\n// export default function FilterPopup({ visible, onClose, onApply, initialFilters = {} }) {\n//   const [filters, setFilters] = useState({\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     department: \"\",\n//     ...initialFilters,\n//   });\n\n//   useEffect(() => setFilters({ firstName: \"\", lastName: \"\", email: \"\", department: \"\", ...initialFilters }), [initialFilters, visible]);\n\n//   if (!visible) return null;\n\n//   return (\n//     <div className=\"position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center\" style={{ zIndex: 1050 }}>\n//       <div className=\"bg-white shadow p-4 rounded\" style={{ minWidth: 320 }}>\n//         <h5>Filter users</h5>\n//         <div className=\"mb-2\">\n//           <input className=\"form-control\" placeholder=\"First name\" value={filters.firstName} onChange={(e) => setFilters({ ...filters, firstName: e.target.value })} />\n//         </div>\n//         <div className=\"mb-2\">\n//           <input className=\"form-control\" placeholder=\"Last name\" value={filters.lastName} onChange={(e) => setFilters({ ...filters, lastName: e.target.value })} />\n//         </div>\n//         <div className=\"mb-2\">\n//           <input className=\"form-control\" placeholder=\"Email\" value={filters.email} onChange={(e) => setFilters({ ...filters, email: e.target.value })} />\n//         </div>\n//         <div className=\"mb-3\">\n//           <input className=\"form-control\" placeholder=\"Department\" value={filters.department} onChange={(e) => setFilters({ ...filters, department: e.target.value })} />\n//         </div>\n\n//         <div className=\"d-flex justify-content-end gap-2\">\n//           <button className=\"btn btn-secondary\" onClick={() => { setFilters({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" }); onApply({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" }); onClose(); }}>Clear</button>\n//           <button className=\"btn btn-outline-primary\" onClick={() => { onApply(filters); onClose(); }}>Apply</button>\n//         </div>\n//       </div>\n\n//       {/* backdrop */}\n//       <div className=\"position-absolute top-0 start-0 w-100 h-100\" style={{ background: \"rgba(0,0,0,0.3)\" }} onClick={onClose}></div>\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"FilterPopup\");","map":{"version":3,"names":["React","useState","Button","Form","Offcanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","FilterPopup","onFilterChange","_s","filters","setFilters","firstName","lastName","email","department","show","setShow","handleChange","e","newFilters","target","name","value","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onHide","placement","Header","closeButton","Title","Body","Group","className","Label","Control","type","onChange","placeholder","Select","_c","$RefreshReg$"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/components/FilterPopup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Offcanvas } from \"react-bootstrap\";\r\n\r\nconst FilterPopup = ({ onFilterChange }) => {\r\n  const [filters, setFilters] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    department: \"\",\r\n  });\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const newFilters = { ...filters, [e.target.name]: e.target.value };\r\n    setFilters(newFilters);\r\n    onFilterChange(newFilters);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"secondary\" onClick={() => setShow(true)}>Filters</Button>\r\n\r\n      <Offcanvas show={show} onHide={() => setShow(false)} placement=\"end\">\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Filter Users</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={filters.firstName}\r\n                onChange={handleChange}\r\n                placeholder=\"Filter by First Name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={filters.lastName}\r\n                onChange={handleChange}\r\n                placeholder=\"Filter by Last Name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={filters.email}\r\n                onChange={handleChange}\r\n                placeholder=\"Filter by Email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Department</Form.Label>\r\n              <Form.Select\r\n                name=\"department\"\r\n                value={filters.department}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">All Departments</option>\r\n                <option value=\"IT\">IT</option>\r\n                <option value=\"HR\">HR</option>\r\n                <option value=\"Finance\">Finance</option>\r\n                <option value=\"Marketing\">Marketing</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterPopup;\r\n\r\n//=========================\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const FilterPopup = ({ onFilterChange }) => {\r\n//   const [filters, setFilters] = useState({\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     email: \"\",\r\n//     department: \"\",\r\n//   });\r\n//   const [show, setShow] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const newFilters = { ...filters, [e.target.name]: e.target.value };\r\n//     setFilters(newFilters);\r\n//     onFilterChange(newFilters);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ position: \"relative\" }}>\r\n//       <button onClick={() => setShow(!show)}>Filters</button>\r\n//       {show && (\r\n//         <div\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             top: \"35px\",\r\n//             left: \"0\",\r\n//             backgroundColor: \"#fff\",\r\n//             border: \"1px solid #ccc\",\r\n//             borderRadius: \"4px\",\r\n//             padding: \"10px\",\r\n//             zIndex: 10,\r\n//             minWidth: \"200px\",\r\n//             boxShadow: \"0 2px 5px rgba(0,0,0,0.15)\",\r\n//           }}\r\n//         >\r\n//           <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"firstName\"\r\n//               placeholder=\"Filter by First Name\"\r\n//               value={filters.firstName}\r\n//               onChange={handleChange}\r\n//             />\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"lastName\"\r\n//               placeholder=\"Filter by Last Name\"\r\n//               value={filters.lastName}\r\n//               onChange={handleChange}\r\n//             />\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"email\"\r\n//               placeholder=\"Filter by Email\"\r\n//               value={filters.email}\r\n//               onChange={handleChange}\r\n//             />\r\n//             <select name=\"department\" value={filters.department} onChange={handleChange}>\r\n//               <option value=\"\">All Departments</option>\r\n//               <option value=\"IT\">IT</option>\r\n//               <option value=\"HR\">HR</option>\r\n//               <option value=\"Finance\">Finance</option>\r\n//               <option value=\"Marketing\">Marketing</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FilterPopup;\r\n\r\n//===============================\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const FilterPopup = ({ onFilterChange }) => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     email: \"\",\r\n//     department: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFilters({ ...filters, [name]: value });\r\n//   };\r\n\r\n//   const handleApply = () => {\r\n//     onFilterChange(filters);\r\n//     setIsOpen(false);\r\n//   };\r\n\r\n//   const handleClear = () => {\r\n//     const cleared = { firstName: \"\", lastName: \"\", email: \"\", department: \"\" };\r\n//     setFilters(cleared);\r\n//     onFilterChange(cleared);\r\n//     setIsOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\r\n//       <button onClick={() => setIsOpen(!isOpen)}>Filter</button>\r\n\r\n//       {isOpen && (\r\n//         <div\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             marginTop: \"5px\",\r\n//             padding: \"15px\",\r\n//             border: \"1px solid #ccc\",\r\n//             borderRadius: \"4px\",\r\n//             backgroundColor: \"#fff\",\r\n//             zIndex: 1000,\r\n//             width: \"250px\",\r\n//           }}\r\n//         >\r\n//           <h4 style={{ marginTop: 0 }}>Filter Users</h4>\r\n\r\n//           {/* First Name */}\r\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\r\n//             First Name:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"firstName\"\r\n//             value={filters.firstName}\r\n//             onChange={handleChange}\r\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n//           />\r\n\r\n//           {/* Last Name */}\r\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\r\n//             Last Name:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"lastName\"\r\n//             value={filters.lastName}\r\n//             onChange={handleChange}\r\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n//           />\r\n\r\n//           {/* Email */}\r\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\r\n//             Email:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"email\"\r\n//             value={filters.email}\r\n//             onChange={handleChange}\r\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n//           />\r\n\r\n//           {/* Department */}\r\n//           <label style={{ display: \"block\", marginBottom: \"5px\" }}>\r\n//             Department:\r\n//           </label>\r\n//           <select\r\n//             name=\"department\"\r\n//             value={filters.department}\r\n//             onChange={handleChange}\r\n//             style={{ width: \"100%\", marginBottom: \"10px\" }}\r\n//           >\r\n//             <option value=\"\">-- Select Department --</option>\r\n//             <option value=\"IT\">IT</option>\r\n//             <option value=\"HR\">HR</option>\r\n//             <option value=\"Finance\">Finance</option>\r\n//             <option value=\"Marketing\">Marketing</option>\r\n//           </select>\r\n\r\n//           {/* Buttons */}\r\n//           <div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n//             <button onClick={handleApply}>Apply</button>\r\n//             <button onClick={handleClear} style={{ marginLeft: \"8px\" }}>\r\n//               Clear\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FilterPopup;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\n// /**\r\n//  * Filter popup component\r\n//  * Props:\r\n//  *  - visible (bool)\r\n//  *  - onClose()\r\n//  *  - onApply(filters)\r\n//  *  - initialFilters\r\n//  */\r\n// export default function FilterPopup({ visible, onClose, onApply, initialFilters = {} }) {\r\n//   const [filters, setFilters] = useState({\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     email: \"\",\r\n//     department: \"\",\r\n//     ...initialFilters,\r\n//   });\r\n\r\n//   useEffect(() => setFilters({ firstName: \"\", lastName: \"\", email: \"\", department: \"\", ...initialFilters }), [initialFilters, visible]);\r\n\r\n//   if (!visible) return null;\r\n\r\n//   return (\r\n//     <div className=\"position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center\" style={{ zIndex: 1050 }}>\r\n//       <div className=\"bg-white shadow p-4 rounded\" style={{ minWidth: 320 }}>\r\n//         <h5>Filter users</h5>\r\n//         <div className=\"mb-2\">\r\n//           <input className=\"form-control\" placeholder=\"First name\" value={filters.firstName} onChange={(e) => setFilters({ ...filters, firstName: e.target.value })} />\r\n//         </div>\r\n//         <div className=\"mb-2\">\r\n//           <input className=\"form-control\" placeholder=\"Last name\" value={filters.lastName} onChange={(e) => setFilters({ ...filters, lastName: e.target.value })} />\r\n//         </div>\r\n//         <div className=\"mb-2\">\r\n//           <input className=\"form-control\" placeholder=\"Email\" value={filters.email} onChange={(e) => setFilters({ ...filters, email: e.target.value })} />\r\n//         </div>\r\n//         <div className=\"mb-3\">\r\n//           <input className=\"form-control\" placeholder=\"Department\" value={filters.department} onChange={(e) => setFilters({ ...filters, department: e.target.value })} />\r\n//         </div>\r\n\r\n//         <div className=\"d-flex justify-content-end gap-2\">\r\n//           <button className=\"btn btn-secondary\" onClick={() => { setFilters({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" }); onApply({ firstName: \"\", lastName: \"\", email: \"\", department: \"\" }); onClose(); }}>Clear</button>\r\n//           <button className=\"btn btn-outline-primary\" onClick={() => { onApply(filters); onClose(); }}>Apply</button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* backdrop */}\r\n//       <div className=\"position-absolute top-0 start-0 w-100 h-100\" style={{ background: \"rgba(0,0,0,0.3)\" }} onClick={onClose}></div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"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,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAACrB,EAAA,CA1EIF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA4EjB,eAAeA,WAAW;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}