{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"https://jsonplaceholder.typicode.com/users\";\nexport const getUsers = async () => (await axios.get(API_BASE)).data;\nexport const getUserById = async id => (await axios.get(`${API_BASE}/${id}`)).data;\nexport const addUser = async user => (await axios.post(API_BASE, user)).data;\nexport const updateUser = async (id, user) => (await axios.put(`${API_BASE}/${id}`, user)).data;\nexport const deleteUser = async id => (await axios.delete(`${API_BASE}/${id}`)).data;\n\n// import axios from \"axios\";\n\n// const API_BASE = \"https://jsonplaceholder.typicode.com\";\n\n// /**\n//  * Axios instance with base URL\n//  */\n// const api = axios.create({\n//   baseURL: API_BASE,\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//   },\n// });\n\n// /**\n//  * Fetch all users.\n//  * Returns an array of user objects from JSONPlaceholder.\n//  */\n// export async function getUsers() {\n//   try {\n//     const res = await api.get(\"/users\");\n//     return res.data;\n//   } catch (err) {\n//     throw new Error(\"Failed to fetch users: \" + err.message);\n//   }\n// }\n\n// /**\n//  * Get a single user by id.\n//  */\n// export async function getUserById(id) {\n//   try {\n//     const res = await api.get(`/users/${id}`);\n//     return res.data;\n//   } catch (err) {\n//     throw new Error(\"Failed to fetch user: \" + err.message);\n//   }\n// }\n\n// /**\n//  * Add a user (JSONPlaceholder returns simulated response).\n//  */\n// export async function addUser(payload) {\n//   try {\n//     const res = await api.post(\"/users\", payload);\n//     return res.data;\n//   } catch (err) {\n//     throw new Error(\"Failed to add user: \" + err.message);\n//   }\n// }\n\n// /**\n//  * Update a user (simulated).\n//  */\n// export async function updateUser(id, payload) {\n//   try {\n//     const res = await api.put(`/users/${id}`, payload);\n//     return res.data;\n//   } catch (err) {\n//     throw new Error(\"Failed to update user: \" + err.message);\n//   }\n// }\n\n// /**\n//  * Delete a user (simulated).\n//  */\n// export async function deleteUser(id) {\n//   try {\n//     const res = await api.delete(`/users/${id}`);\n//     return res.data;\n//   } catch (err) {\n//     throw new Error(\"Failed to delete user: \" + err.message);\n//   }\n// }","map":{"version":3,"names":["axios","API_BASE","getUsers","get","data","getUserById","id","addUser","user","post","updateUser","put","deleteUser","delete"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nexport const getUsers = async () => (await axios.get(API_BASE)).data;\r\nexport const getUserById = async (id) => (await axios.get(`${API_BASE}/${id}`)).data;\r\nexport const addUser = async (user) => (await axios.post(API_BASE, user)).data;\r\nexport const updateUser = async (id, user) => (await axios.put(`${API_BASE}/${id}`, user)).data;\r\nexport const deleteUser = async (id) => (await axios.delete(`${API_BASE}/${id}`)).data;\r\n\r\n\r\n\r\n// import axios from \"axios\";\r\n\r\n// const API_BASE = \"https://jsonplaceholder.typicode.com\";\r\n\r\n// /**\r\n//  * Axios instance with base URL\r\n//  */\r\n// const api = axios.create({\r\n//   baseURL: API_BASE,\r\n//   headers: {\r\n//     \"Content-Type\": \"application/json\",\r\n//   },\r\n// });\r\n\r\n// /**\r\n//  * Fetch all users.\r\n//  * Returns an array of user objects from JSONPlaceholder.\r\n//  */\r\n// export async function getUsers() {\r\n//   try {\r\n//     const res = await api.get(\"/users\");\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     throw new Error(\"Failed to fetch users: \" + err.message);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Get a single user by id.\r\n//  */\r\n// export async function getUserById(id) {\r\n//   try {\r\n//     const res = await api.get(`/users/${id}`);\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     throw new Error(\"Failed to fetch user: \" + err.message);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Add a user (JSONPlaceholder returns simulated response).\r\n//  */\r\n// export async function addUser(payload) {\r\n//   try {\r\n//     const res = await api.post(\"/users\", payload);\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     throw new Error(\"Failed to add user: \" + err.message);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Update a user (simulated).\r\n//  */\r\n// export async function updateUser(id, payload) {\r\n//   try {\r\n//     const res = await api.put(`/users/${id}`, payload);\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     throw new Error(\"Failed to update user: \" + err.message);\r\n//   }\r\n// }\r\n\r\n// /**\r\n//  * Delete a user (simulated).\r\n//  */\r\n// export async function deleteUser(id) {\r\n//   try {\r\n//     const res = await api.delete(`/users/${id}`);\r\n//     return res.data;\r\n//   } catch (err) {\r\n//     throw new Error(\"Failed to delete user: \" + err.message);\r\n//   }\r\n// }\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,4CAA4C;AAE7D,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY,CAAC,MAAMF,KAAK,CAACG,GAAG,CAACF,QAAQ,CAAC,EAAEG,IAAI;AACpE,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAE,IAAK,CAAC,MAAMN,KAAK,CAACG,GAAG,CAAC,GAAGF,QAAQ,IAAIK,EAAE,EAAE,CAAC,EAAEF,IAAI;AACpF,OAAO,MAAMG,OAAO,GAAG,MAAOC,IAAI,IAAK,CAAC,MAAMR,KAAK,CAACS,IAAI,CAACR,QAAQ,EAAEO,IAAI,CAAC,EAAEJ,IAAI;AAC9E,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,IAAI,KAAK,CAAC,MAAMR,KAAK,CAACW,GAAG,CAAC,GAAGV,QAAQ,IAAIK,EAAE,EAAE,EAAEE,IAAI,CAAC,EAAEJ,IAAI;AAC/F,OAAO,MAAMQ,UAAU,GAAG,MAAON,EAAE,IAAK,CAAC,MAAMN,KAAK,CAACa,MAAM,CAAC,GAAGZ,QAAQ,IAAIK,EAAE,EAAE,CAAC,EAAEF,IAAI;;AAItF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}