{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmayu\\\\OneDrive\\\\Desktop\\\\kanishka\\\\project\\\\extra\\\\user_Dashboard\\\\user_dashboard\\\\src\\\\pages\\\\EditUserPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UserForm from \"../components/UserForm\";\nimport { updateUser, getUsers } from \"../services/api\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const users = await getUsers();\n        const u = users.find(u => u.id === Number(id));\n        const [firstName, lastName] = u.name.split(\" \");\n        setUser({\n          firstName,\n          lastName,\n          email: u.email,\n          department: u.department || \"IT\"\n        });\n      } catch {\n        alert(\"Error fetching user\");\n      }\n    };\n    fetchUser();\n  }, [id]);\n  const handleSubmit = async data => {\n    try {\n      await updateUser(id, {\n        name: `${data.firstName} ${data.lastName}`,\n        email: data.email,\n        department: data.department\n      });\n      alert(\"User updated successfully\");\n      navigate(\"/users\");\n    } catch {\n      alert(\"Error updating user\");\n    }\n  };\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-4 shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      initialData: user,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserPage, \"Ffotjx5VV3ZpJx+o8KIxjh0rQ1U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUserPage;\nexport default EditUserPage;\n\n//working--------------------------\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { getUserById, updateUser } from \"../services/api\";\n\n// const EditUserPage = () => {\n//   const { id } = useParams();\n//   const [form, setForm] = useState({ name: \"\", email: \"\", department: \"\" });\n//   const navigate = useNavigate();\n\n//   useEffect(() => { fetchUser(); }, []);\n\n//   const fetchUser = async () => {\n//     try {\n//       const user = await getUserById(id);\n//       setForm({ name: user.name, email: user.email, department: user.department || \"IT\" });\n//     } catch { alert(\"Failed to fetch user\"); }\n//   };\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await updateUser(id, form);\n//       navigate(\"/\", { state: { updated: true } }); // navigate back and trigger refetch\n//     } catch { alert(\"Failed to update user\"); }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"auto\" }}>\n//       <h2>Edit User</h2>\n//       <form style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }} onSubmit={handleSubmit}>\n//         <input type=\"text\" placeholder=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required />\n//         <input type=\"email\" placeholder=\"Email\" name=\"email\" value={form.email} onChange={handleChange} required />\n//         <select name=\"department\" value={form.department} onChange={handleChange}>\n//           <option value=\"IT\">IT</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Finance\">Finance</option>\n//           <option value=\"Marketing\">Marketing</option>\n//         </select>\n//         <button type=\"submit\">Update User</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditUserPage;\n\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { getUserById, updateUser } from \"../services/api\";\n\n// const EditUserPage = () => {\n//   const { id } = useParams();\n//   const [form, setForm] = useState({ name: \"\", email: \"\", department: \"\" });\n//   const navigate = useNavigate();\n\n//   useEffect(() => { fetchUser(); }, []);\n\n//   const fetchUser = async () => {\n//     try {\n//       const user = await getUserById(id);\n//       setForm({ name: user.name, email: user.email, department: user.department || \"IT\" });\n//     } catch { alert(\"Failed to fetch user\"); }\n//   };\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await updateUser(id, form);\n//       alert(\"User updated successfully\");\n//       navigate(\"/\");\n//     } catch { alert(\"Failed to update user\"); }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"auto\" }}>\n//       <h2>Edit User</h2>\n//       <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\n//         <input type=\"text\" placeholder=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required />\n//         <input type=\"email\" placeholder=\"Email\" name=\"email\" value={form.email} onChange={handleChange} required />\n//         <select name=\"department\" value={form.department} onChange={handleChange}>\n//           <option value=\"IT\">IT</option>\n//           <option value=\"HR\">HR</option>\n//           <option value=\"Finance\">Finance</option>\n//           <option value=\"Marketing\">Marketing</option>\n//         </select>\n//         <button type=\"submit\">Update User</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditUserPage;\nvar _c;\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"names":["React","useEffect","useState","UserForm","updateUser","getUsers","useParams","useNavigate","jsxDEV","_jsxDEV","EditUserPage","_s","id","navigate","user","setUser","fetchUser","users","u","find","Number","firstName","lastName","name","split","email","department","alert","handleSubmit","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialData","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/pages/EditUserPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UserForm from \"../components/UserForm\";\r\nimport { updateUser, getUsers } from \"../services/api\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst EditUserPage = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const users = await getUsers();\r\n        const u = users.find((u) => u.id === Number(id));\r\n        const [firstName, lastName] = u.name.split(\" \");\r\n        setUser({ firstName, lastName, email: u.email, department: u.department || \"IT\" });\r\n      } catch {\r\n        alert(\"Error fetching user\");\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      await updateUser(id, { name: `${data.firstName} ${data.lastName}`, email: data.email, department: data.department });\r\n      alert(\"User updated successfully\");\r\n      navigate(\"/users\");\r\n    } catch {\r\n      alert(\"Error updating user\");\r\n    }\r\n  };\r\n\r\n  return user ? (\r\n    <div className=\"card p-4 shadow-sm\">\r\n      <h4>Edit User</h4>\r\n      <UserForm initialData={user} onSubmit={handleSubmit} />\r\n    </div>\r\n  ) : (\r\n    <p>Loading...</p>\r\n  );\r\n};\r\n\r\nexport default EditUserPage;\r\n\r\n\r\n\r\n//working--------------------------\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import { getUserById, updateUser } from \"../services/api\";\r\n\r\n// const EditUserPage = () => {\r\n//   const { id } = useParams();\r\n//   const [form, setForm] = useState({ name: \"\", email: \"\", department: \"\" });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => { fetchUser(); }, []);\r\n\r\n//   const fetchUser = async () => {\r\n//     try {\r\n//       const user = await getUserById(id);\r\n//       setForm({ name: user.name, email: user.email, department: user.department || \"IT\" });\r\n//     } catch { alert(\"Failed to fetch user\"); }\r\n//   };\r\n\r\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await updateUser(id, form);\r\n//       navigate(\"/\", { state: { updated: true } }); // navigate back and trigger refetch\r\n//     } catch { alert(\"Failed to update user\"); }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"auto\" }}>\r\n//       <h2>Edit User</h2>\r\n//       <form style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }} onSubmit={handleSubmit}>\r\n//         <input type=\"text\" placeholder=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required />\r\n//         <input type=\"email\" placeholder=\"Email\" name=\"email\" value={form.email} onChange={handleChange} required />\r\n//         <select name=\"department\" value={form.department} onChange={handleChange}>\r\n//           <option value=\"IT\">IT</option>\r\n//           <option value=\"HR\">HR</option>\r\n//           <option value=\"Finance\">Finance</option>\r\n//           <option value=\"Marketing\">Marketing</option>\r\n//         </select>\r\n//         <button type=\"submit\">Update User</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditUserPage;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import { getUserById, updateUser } from \"../services/api\";\r\n\r\n// const EditUserPage = () => {\r\n//   const { id } = useParams();\r\n//   const [form, setForm] = useState({ name: \"\", email: \"\", department: \"\" });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => { fetchUser(); }, []);\r\n\r\n//   const fetchUser = async () => {\r\n//     try {\r\n//       const user = await getUserById(id);\r\n//       setForm({ name: user.name, email: user.email, department: user.department || \"IT\" });\r\n//     } catch { alert(\"Failed to fetch user\"); }\r\n//   };\r\n\r\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await updateUser(id, form);\r\n//       alert(\"User updated successfully\");\r\n//       navigate(\"/\");\r\n//     } catch { alert(\"Failed to update user\"); }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"auto\" }}>\r\n//       <h2>Edit User</h2>\r\n//       <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n//         <input type=\"text\" placeholder=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required />\r\n//         <input type=\"email\" placeholder=\"Email\" name=\"email\" value={form.email} onChange={handleChange} required />\r\n//         <select name=\"department\" value={form.department} onChange={handleChange}>\r\n//           <option value=\"IT\">IT</option>\r\n//           <option value=\"HR\">HR</option>\r\n//           <option value=\"Finance\">Finance</option>\r\n//           <option value=\"Marketing\">Marketing</option>\r\n//         </select>\r\n//         <button type=\"submit\">Update User</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditUserPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}