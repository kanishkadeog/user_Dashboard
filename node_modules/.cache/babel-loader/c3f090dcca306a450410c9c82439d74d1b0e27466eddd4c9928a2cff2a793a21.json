{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmayu\\\\OneDrive\\\\Desktop\\\\kanishka\\\\project\\\\extra\\\\user_Dashboard\\\\user_dashboard\\\\src\\\\pages\\\\UsersPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport UserTable from \"../components/UserTable\";\nimport { getUsers, deleteUser } from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport FilterPopup from \"../components/FilterPopup\";\nimport Pagination from \"../components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersPage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showFilter, setShowFilter] = useState(false);\n  const [sortConfig, setSortConfig] = useState({\n    key: \"id\",\n    direction: \"asc\"\n  });\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const data = await getUsers();\n\n      // Split name into firstName & lastName + enrich with department\n      const enrichedData = data.map(user => {\n        var _user$company;\n        const [firstName, ...rest] = user.name.split(\" \");\n        const lastName = rest.join(\" \") || \"\";\n        return {\n          ...user,\n          firstName,\n          lastName,\n          department: ((_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.name) || \"N/A\"\n        };\n      });\n      setUsers(enrichedData);\n      setFilteredUsers(enrichedData);\n    } catch {\n      alert(\"Error fetching users\");\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm(\"Are you sure to delete this user?\")) {\n      try {\n        await deleteUser(id);\n        const updatedUsers = users.filter(u => u.id !== id);\n        setUsers(updatedUsers);\n        setFilteredUsers(updatedUsers);\n      } catch {\n        alert(\"Error deleting user\");\n      }\n    }\n  };\n\n  // 🔍 Search\n  const handleSearch = query => {\n    setSearchQuery(query);\n    const filtered = users.filter(user => {\n      return user.firstName.toLowerCase().includes(query.toLowerCase()) || user.lastName.toLowerCase().includes(query.toLowerCase()) || user.email.toLowerCase().includes(query.toLowerCase()) || user.department.toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredUsers(filtered);\n  };\n\n  // 🎯 Filter\n  const handleFilter = filters => {\n    const filtered = users.filter(user => {\n      return (!filters.firstName || user.firstName.toLowerCase().includes(filters.firstName.toLowerCase())) && (!filters.lastName || user.lastName.toLowerCase().includes(filters.lastName.toLowerCase())) && (!filters.email || user.email.toLowerCase().includes(filters.email.toLowerCase())) && (!filters.department || user.department.toLowerCase().includes(filters.department.toLowerCase()));\n    });\n    setFilteredUsers(filtered || []);\n    setShowFilter(false);\n  };\n  const handleClearFilter = () => {\n    setFilteredUsers(users);\n  };\n\n  // 🔽 Sorting fix\n  const handleSort = key => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") direction = \"desc\";\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\n    const {\n      key,\n      direction\n    } = sortConfig;\n    let compareA = a[key];\n    let compareB = b[key];\n    if (key === \"id\") {\n      compareA = Number(compareA);\n      compareB = Number(compareB);\n    } else {\n      compareA = (compareA || \"\").toString().toLowerCase();\n      compareB = (compareB || \"\").toString().toLowerCase();\n    }\n    if (compareA < compareB) return direction === \"asc\" ? -1 : 1;\n    if (compareA > compareB) return direction === \"asc\" ? 1 : -1;\n    return 0;\n  });\n\n  // 📄 Pagination logic\n  const indexOfLastUser = currentPage * rowsPerPage;\n  const indexOfFirstUser = indexOfLastUser - rowsPerPage;\n  const currentUsers = sortedUsers.slice(indexOfFirstUser, indexOfLastUser);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"text-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => navigate(\"/add\"),\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowFilter(!showFilter),\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: handleClearFilter,\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), showFilter && /*#__PURE__*/_jsxDEV(FilterPopup, {\n      onApply: handleFilter,\n      onClose: () => setShowFilter(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 22\n    }, this), currentUsers.length > 0 ? /*#__PURE__*/_jsxDEV(UserTable, {\n      users: currentUsers,\n      onDelete: handleDelete,\n      onEdit: id => navigate(`/edit/${id}`),\n      onSearch: handleSearch,\n      onSort: handleSort,\n      sortConfig: sortConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: \"No users found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalUsers: sortedUsers.length,\n      rowsPerPage: rowsPerPage,\n      setRowsPerPage: setRowsPerPage,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersPage, \"qUefnDuouTBm7trTwwM6rgk+owY=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersPage;\nexport default UsersPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\n// import UserTable from \"../components/UserTable\";\n// import { getUsers, deleteUser } from \"../services/api\";\n// import { useNavigate } from \"react-router-dom\";\n// import FilterPopup from \"../components/FilterPopup\";\n\n// const UsersPage = () => {\n//   // State to store all users fetched from API\n//   const [users, setUsers] = useState([]);\n//   // State to store filtered/search results\n//   const [filteredUsers, setFilteredUsers] = useState([]);\n//   // State for search input value\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   // State to toggle filter popup\n//   const [showFilter, setShowFilter] = useState(false);\n//   // State to track sorting key and direction\n//   const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\n\n//   const navigate = useNavigate();\n\n//   // Fetch users when component mounts\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   // Function to fetch users from API\n//   const fetchUsers = async () => {\n//     try {\n//       const data = await getUsers();\n//       // Enrich data: use company.name as department\n//       const enrichedData = data.map((user) => ({\n//         ...user,\n//         department: user.company?.name || \"N/A\",\n//       }));\n//       setUsers(enrichedData);\n//       setFilteredUsers(enrichedData);\n//     } catch {\n//       alert(\"Error fetching users\");\n//     }\n//   };\n\n//   // Delete user by ID\n//   const handleDelete = async (id) => {\n//     if (window.confirm(\"Are you sure to delete this user?\")) {\n//       try {\n//         await deleteUser(id);\n//         // Remove deleted user from state\n//         const updatedUsers = users.filter((u) => u.id !== id);\n//         setUsers(updatedUsers);\n//         setFilteredUsers(updatedUsers);\n//       } catch {\n//         alert(\"Error deleting user\");\n//       }\n//     }\n//   };\n\n//   // Handle search input\n//   const handleSearch = (query) => {\n//     setSearchQuery(query);\n//     const filtered = users.filter((user) => {\n//       return (\n//         user.name.toLowerCase().includes(query.toLowerCase()) ||\n//         user.email.toLowerCase().includes(query.toLowerCase()) ||\n//         user.department.toLowerCase().includes(query.toLowerCase())\n//       );\n//     });\n//     setFilteredUsers(filtered);\n//   };\n\n//   // Apply filter from FilterPopup\n//   const handleFilter = (filters) => {\n//     const filtered = users.filter((user) => {\n//       return (\n//         (!filters.name || user.name.toLowerCase().includes(filters.name.toLowerCase())) &&\n//         (!filters.email || user.email.toLowerCase().includes(filters.email.toLowerCase())) &&\n//         (!filters.department || user.department.toLowerCase().includes(filters.department.toLowerCase()))\n//       );\n//     });\n//     setFilteredUsers(filtered || []);\n//     setShowFilter(false); // Close filter popup\n//   };\n\n//   // Clear filters and show all users\n//   const handleClearFilter = () => {\n//     setFilteredUsers(users);\n//   };\n\n//   // Handle sorting by column\n//   const handleSort = (key) => {\n//     let direction = \"asc\";\n//     if (sortConfig.key === key && sortConfig.direction === \"asc\") direction = \"desc\";\n//     setSortConfig({ key, direction });\n//   };\n\n//   // Sort users based on sortConfig\n//   const sortedUsers = [...filteredUsers].sort((a, b) => {\n//     const { key, direction } = sortConfig;\n//     let compareA = a[key];\n//     let compareB = b[key];\n//     if (key === \"id\") {\n//       compareA = Number(compareA);\n//       compareB = Number(compareB);\n//     } else {\n//       compareA = compareA.toLowerCase();\n//       compareB = compareB.toLowerCase();\n//     }\n//     if (compareA < compareB) return direction === \"asc\" ? -1 : 1;\n//     if (compareA > compareB) return direction === \"asc\" ? 1 : -1;\n//     return 0;\n//   });\n\n//   return (\n//     <Container className=\"mt-4\">\n//       <Row className=\"mb-3\">\n\n//         <Col className=\"text-end\">\n//           {/* Button to navigate to Add User page */}\n//           <Button variant=\"primary\" onClick={() => navigate(\"/add\")}>Add User</Button>{\" \"}\n//           {/* Toggle filter popup */}\n//           <Button variant=\"secondary\" onClick={() => setShowFilter(!showFilter)}>Filter</Button>{\" \"}\n//           {/* Clear applied filters */}\n//           <Button variant=\"outline-secondary\" onClick={handleClearFilter}>Clear Filter</Button>\n//         </Col>\n//       </Row>\n\n//       {/* Show FilterPopup if toggled */}\n//       {showFilter && <FilterPopup onApply={handleFilter} onClose={() => setShowFilter(false)} />}\n\n//       {/* UserTable component to display users */}\n//   {sortedUsers.length === 0 ? (\n//   <div className=\"text-center p-3\">\n//         <h4 className=\"text-center mb-4 text-danger\">No users found</h4>\n\n//   </div>\n// ) : (\n//   <UserTable\n//     users={sortedUsers}\n//     onDelete={handleDelete}\n//     onEdit={(id) => navigate(`/edit/${id}`)}\n//     onSearch={handleSearch}\n//     onSort={handleSort}\n//     sortConfig={sortConfig}\n//   />\n// )}\n\n//       {/* <UserTable\n//         users={sortedUsers}\n//         onDelete={handleDelete}\n//         onEdit={(id) => navigate(`/edit/${id}`)}\n//         onSearch={handleSearch}\n//         onSort={handleSort}\n//         sortConfig={sortConfig}\n//       /> */}\n\n//     </Container>\n//   );\n// };\n\n// export default UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","UserTable","getUsers","deleteUser","useNavigate","FilterPopup","Pagination","jsxDEV","_jsxDEV","UsersPage","_s","users","setUsers","filteredUsers","setFilteredUsers","searchQuery","setSearchQuery","showFilter","setShowFilter","sortConfig","setSortConfig","key","direction","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","navigate","fetchUsers","data","enrichedData","map","user","_user$company","firstName","rest","name","split","lastName","join","department","company","alert","handleDelete","id","window","confirm","updatedUsers","filter","u","handleSearch","query","filtered","toLowerCase","includes","email","handleFilter","filters","handleClearFilter","handleSort","sortedUsers","sort","a","b","compareA","compareB","Number","toString","indexOfLastUser","indexOfFirstUser","currentUsers","slice","className","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onApply","onClose","length","onDelete","onEdit","onSearch","onSort","style","color","textAlign","totalUsers","_c","$RefreshReg$"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/pages/UsersPage.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport UserTable from \"../components/UserTable\";\r\nimport { getUsers, deleteUser } from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport FilterPopup from \"../components/FilterPopup\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst UsersPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const data = await getUsers();\r\n\r\n      // Split name into firstName & lastName + enrich with department\r\n      const enrichedData = data.map((user) => {\r\n        const [firstName, ...rest] = user.name.split(\" \");\r\n        const lastName = rest.join(\" \") || \"\";\r\n        return {\r\n          ...user,\r\n          firstName,\r\n          lastName,\r\n          department: user.company?.name || \"N/A\",\r\n        };\r\n      });\r\n\r\n      setUsers(enrichedData);\r\n      setFilteredUsers(enrichedData);\r\n    } catch {\r\n      alert(\"Error fetching users\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm(\"Are you sure to delete this user?\")) {\r\n      try {\r\n        await deleteUser(id);\r\n        const updatedUsers = users.filter((u) => u.id !== id);\r\n        setUsers(updatedUsers);\r\n        setFilteredUsers(updatedUsers);\r\n      } catch {\r\n        alert(\"Error deleting user\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // 🔍 Search\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    const filtered = users.filter((user) => {\r\n      return (\r\n        user.firstName.toLowerCase().includes(query.toLowerCase()) ||\r\n        user.lastName.toLowerCase().includes(query.toLowerCase()) ||\r\n        user.email.toLowerCase().includes(query.toLowerCase()) ||\r\n        user.department.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n    });\r\n    setFilteredUsers(filtered);\r\n  };\r\n\r\n  // 🎯 Filter\r\n  const handleFilter = (filters) => {\r\n    const filtered = users.filter((user) => {\r\n      return (\r\n        (!filters.firstName || user.firstName.toLowerCase().includes(filters.firstName.toLowerCase())) &&\r\n        (!filters.lastName || user.lastName.toLowerCase().includes(filters.lastName.toLowerCase())) &&\r\n        (!filters.email || user.email.toLowerCase().includes(filters.email.toLowerCase())) &&\r\n        (!filters.department || user.department.toLowerCase().includes(filters.department.toLowerCase()))\r\n      );\r\n    });\r\n    setFilteredUsers(filtered || []);\r\n    setShowFilter(false);\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    setFilteredUsers(users);\r\n  };\r\n\r\n  // 🔽 Sorting fix\r\n  const handleSort = (key) => {\r\n    let direction = \"asc\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") direction = \"desc\";\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const sortedUsers = [...filteredUsers].sort((a, b) => {\r\n    const { key, direction } = sortConfig;\r\n    let compareA = a[key];\r\n    let compareB = b[key];\r\n\r\n    if (key === \"id\") {\r\n      compareA = Number(compareA);\r\n      compareB = Number(compareB);\r\n    } else {\r\n      compareA = (compareA || \"\").toString().toLowerCase();\r\n      compareB = (compareB || \"\").toString().toLowerCase();\r\n    }\r\n\r\n    if (compareA < compareB) return direction === \"asc\" ? -1 : 1;\r\n    if (compareA > compareB) return direction === \"asc\" ? 1 : -1;\r\n    return 0;\r\n  });\r\n\r\n  // 📄 Pagination logic\r\n  const indexOfLastUser = currentPage * rowsPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - rowsPerPage;\r\n  const currentUsers = sortedUsers.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Row className=\"mb-3\">\r\n        <Col className=\"text-end\">\r\n          <Button variant=\"primary\" onClick={() => navigate(\"/add\")}>\r\n            Add User\r\n          </Button>{\" \"}\r\n          <Button variant=\"secondary\" onClick={() => setShowFilter(!showFilter)}>\r\n            Filter\r\n          </Button>{\" \"}\r\n          <Button variant=\"outline-secondary\" onClick={handleClearFilter}>\r\n            Clear Filter\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {showFilter && <FilterPopup onApply={handleFilter} onClose={() => setShowFilter(false)} />}\r\n\r\n      {currentUsers.length > 0 ? (\r\n        <UserTable\r\n          users={currentUsers}\r\n          onDelete={handleDelete}\r\n          onEdit={(id) => navigate(`/edit/${id}`)}\r\n          onSearch={handleSearch}\r\n          onSort={handleSort}\r\n          sortConfig={sortConfig}\r\n        />\r\n      ) : (\r\n        <p style={{ color: \"red\", textAlign: \"center\" }}>No users found</p>\r\n      )}\r\n\r\n      {/* Pagination Controls */}\r\n      <Pagination\r\n        totalUsers={sortedUsers.length}\r\n        rowsPerPage={rowsPerPage}\r\n        setRowsPerPage={setRowsPerPage}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import UserTable from \"../components/UserTable\";\r\n// import { getUsers, deleteUser } from \"../services/api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import FilterPopup from \"../components/FilterPopup\";\r\n\r\n// const UsersPage = () => {\r\n//   // State to store all users fetched from API\r\n//   const [users, setUsers] = useState([]);\r\n//   // State to store filtered/search results\r\n//   const [filteredUsers, setFilteredUsers] = useState([]);\r\n//   // State for search input value\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   // State to toggle filter popup\r\n//   const [showFilter, setShowFilter] = useState(false);\r\n//   // State to track sorting key and direction\r\n//   const [sortConfig, setSortConfig] = useState({ key: \"id\", direction: \"asc\" });\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   // Fetch users when component mounts\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Function to fetch users from API\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const data = await getUsers();\r\n//       // Enrich data: use company.name as department\r\n//       const enrichedData = data.map((user) => ({\r\n//         ...user,\r\n//         department: user.company?.name || \"N/A\",\r\n//       }));\r\n//       setUsers(enrichedData);\r\n//       setFilteredUsers(enrichedData);\r\n//     } catch {\r\n//       alert(\"Error fetching users\");\r\n//     }\r\n//   };\r\n\r\n//   // Delete user by ID\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm(\"Are you sure to delete this user?\")) {\r\n//       try {\r\n//         await deleteUser(id);\r\n//         // Remove deleted user from state\r\n//         const updatedUsers = users.filter((u) => u.id !== id);\r\n//         setUsers(updatedUsers);\r\n//         setFilteredUsers(updatedUsers);\r\n//       } catch {\r\n//         alert(\"Error deleting user\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   // Handle search input\r\n//   const handleSearch = (query) => {\r\n//     setSearchQuery(query);\r\n//     const filtered = users.filter((user) => {\r\n//       return (\r\n//         user.name.toLowerCase().includes(query.toLowerCase()) ||\r\n//         user.email.toLowerCase().includes(query.toLowerCase()) ||\r\n//         user.department.toLowerCase().includes(query.toLowerCase())\r\n//       );\r\n//     });\r\n//     setFilteredUsers(filtered);\r\n//   };\r\n\r\n//   // Apply filter from FilterPopup\r\n//   const handleFilter = (filters) => {\r\n//     const filtered = users.filter((user) => {\r\n//       return (\r\n//         (!filters.name || user.name.toLowerCase().includes(filters.name.toLowerCase())) &&\r\n//         (!filters.email || user.email.toLowerCase().includes(filters.email.toLowerCase())) &&\r\n//         (!filters.department || user.department.toLowerCase().includes(filters.department.toLowerCase()))\r\n//       );\r\n//     });\r\n//     setFilteredUsers(filtered || []);\r\n//     setShowFilter(false); // Close filter popup\r\n//   };\r\n\r\n//   // Clear filters and show all users\r\n//   const handleClearFilter = () => {\r\n//     setFilteredUsers(users);\r\n//   };\r\n\r\n//   // Handle sorting by column\r\n//   const handleSort = (key) => {\r\n//     let direction = \"asc\";\r\n//     if (sortConfig.key === key && sortConfig.direction === \"asc\") direction = \"desc\";\r\n//     setSortConfig({ key, direction });\r\n//   };\r\n\r\n//   // Sort users based on sortConfig\r\n//   const sortedUsers = [...filteredUsers].sort((a, b) => {\r\n//     const { key, direction } = sortConfig;\r\n//     let compareA = a[key];\r\n//     let compareB = b[key];\r\n//     if (key === \"id\") {\r\n//       compareA = Number(compareA);\r\n//       compareB = Number(compareB);\r\n//     } else {\r\n//       compareA = compareA.toLowerCase();\r\n//       compareB = compareB.toLowerCase();\r\n//     }\r\n//     if (compareA < compareB) return direction === \"asc\" ? -1 : 1;\r\n//     if (compareA > compareB) return direction === \"asc\" ? 1 : -1;\r\n//     return 0;\r\n//   });\r\n\r\n//   return (\r\n//     <Container className=\"mt-4\">\r\n//       <Row className=\"mb-3\">\r\n        \r\n//         <Col className=\"text-end\">\r\n//           {/* Button to navigate to Add User page */}\r\n//           <Button variant=\"primary\" onClick={() => navigate(\"/add\")}>Add User</Button>{\" \"}\r\n//           {/* Toggle filter popup */}\r\n//           <Button variant=\"secondary\" onClick={() => setShowFilter(!showFilter)}>Filter</Button>{\" \"}\r\n//           {/* Clear applied filters */}\r\n//           <Button variant=\"outline-secondary\" onClick={handleClearFilter}>Clear Filter</Button>\r\n//         </Col>\r\n//       </Row>\r\n\r\n//       {/* Show FilterPopup if toggled */}\r\n//       {showFilter && <FilterPopup onApply={handleFilter} onClose={() => setShowFilter(false)} />}\r\n\r\n      \r\n//       {/* UserTable component to display users */}\r\n//   {sortedUsers.length === 0 ? (\r\n//   <div className=\"text-center p-3\">\r\n//         <h4 className=\"text-center mb-4 text-danger\">No users found</h4>\r\n\r\n//   </div>\r\n// ) : (\r\n//   <UserTable\r\n//     users={sortedUsers}\r\n//     onDelete={handleDelete}\r\n//     onEdit={(id) => navigate(`/edit/${id}`)}\r\n//     onSearch={handleSearch}\r\n//     onSort={handleSort}\r\n//     sortConfig={sortConfig}\r\n//   />\r\n// )}\r\n\r\n//       {/* <UserTable\r\n//         users={sortedUsers}\r\n//         onDelete={handleDelete}\r\n//         onEdit={(id) => navigate(`/edit/${id}`)}\r\n//         onSearch={handleSearch}\r\n//         onSort={handleSort}\r\n//         sortConfig={sortConfig}\r\n//       /> */}\r\n    \r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default UsersPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}