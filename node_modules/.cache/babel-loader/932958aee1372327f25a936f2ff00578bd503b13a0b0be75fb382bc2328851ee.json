{"ast":null,"code":"import axios from \"axios\"; // Import Axios for HTTP requests\n\n// Base URL for the mock backend API\nconst API_BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\n\n/**\r\n * Fetch all users from the API\r\n * @returns {Promise<Array>} List of users\r\n */\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get(API_BASE_URL); // GET request to fetch users\n    return response.data; // Return the data from response\n  } catch (error) {\n    throw error; // Throw error to handle in calling function\n  }\n};\n\n/**\r\n * Add a new user\r\n * @param {Object} user - User data to add\r\n * @returns {Promise<Object>} Created user\r\n */\nexport const addUser = async user => {\n  try {\n    const response = await axios.post(API_BASE_URL, user); // POST request to add user\n    return response.data; // Return the newly added user\n  } catch (error) {\n    throw error;\n  }\n};\n\n/**\r\n * Update an existing user by ID\r\n * @param {number|string} id - User ID\r\n * @param {Object} user - Updated user data\r\n * @returns {Promise<Object>} Updated user\r\n */\nexport const updateUser = async (id, user) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${id}`, user); // PUT request to update user\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n/**\r\n * Delete a user by ID\r\n * @param {number|string} id - User ID\r\n * @returns {Promise<Object>} Response from delete request\r\n */\nexport const deleteUser = async id => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${id}`); // DELETE request to remove user\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getUsers","response","get","data","error","addUser","user","post","updateUser","id","put","deleteUser","delete"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/services/api.js"],"sourcesContent":["import axios from \"axios\"; // Import Axios for HTTP requests\r\n\r\n// Base URL for the mock backend API\r\nconst API_BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\n/**\r\n * Fetch all users from the API\r\n * @returns {Promise<Array>} List of users\r\n */\r\nexport const getUsers = async () => {\r\n  try {\r\n    const response = await axios.get(API_BASE_URL); // GET request to fetch users\r\n    return response.data; // Return the data from response\r\n  } catch (error) {\r\n    throw error; // Throw error to handle in calling function\r\n  }\r\n};\r\n\r\n/**\r\n * Add a new user\r\n * @param {Object} user - User data to add\r\n * @returns {Promise<Object>} Created user\r\n */\r\nexport const addUser = async (user) => {\r\n  try {\r\n    const response = await axios.post(API_BASE_URL, user); // POST request to add user\r\n    return response.data; // Return the newly added user\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Update an existing user by ID\r\n * @param {number|string} id - User ID\r\n * @param {Object} user - Updated user data\r\n * @returns {Promise<Object>} Updated user\r\n */\r\nexport const updateUser = async (id, user) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/${id}`, user); // PUT request to update user\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Delete a user by ID\r\n * @param {number|string} id - User ID\r\n * @returns {Promise<Object>} Response from delete request\r\n */\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_BASE_URL}/${id}`); // DELETE request to remove user\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AACA,MAAMC,YAAY,GAAG,4CAA4C;;AAEjE;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,YAAY,CAAC,CAAC,CAAC;IAChD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;EACrC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACS,IAAI,CAACR,YAAY,EAAEO,IAAI,CAAC,CAAC,CAAC;IACvD,OAAOL,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEH,IAAI,KAAK;EAC5C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACY,GAAG,CAAC,GAAGX,YAAY,IAAIU,EAAE,EAAE,EAAEH,IAAI,CAAC,CAAC,CAAC;IACjE,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMO,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACc,MAAM,CAAC,GAAGb,YAAY,IAAIU,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}