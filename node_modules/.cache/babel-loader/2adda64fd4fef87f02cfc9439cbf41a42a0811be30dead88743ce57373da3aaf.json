{"ast":null,"code":"export const isRequired = value => value && value.trim() !== \"\";\nexport const isEmailValid = email => {\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return regex.test(email);\n};\n\n// /**\n//  * Validation helpers for the user form.\n//  */\n\n// /**\n//  * Very small email regex for client-side validation.\n//  */\n// export function isValidEmail(email) {\n//   const re = /^\\S+@\\S+\\.\\S+$/;\n//   return re.test(String(email).toLowerCase());\n// }\n\n// /**\n//  * Validate user form fields.\n//  * Expecting an object: { firstName, lastName, email, department }\n//  * Returns { valid: boolean, errors: { field: message } }\n//  */\n// export function validateUser(user) {\n//   const errors = {};\n//   if (!user.firstName || user.firstName.trim() === \"\") {\n//     errors.firstName = \"First name is required\";\n//   }\n//   if (!user.lastName || user.lastName.trim() === \"\") {\n//     errors.lastName = \"Last name is required\";\n//   }\n//   if (!user.email || user.email.trim() === \"\") {\n//     errors.email = \"Email is required\";\n//   } else if (!isValidEmail(user.email)) {\n//     errors.email = \"Please enter a valid email address\";\n//   }\n//   // department is optional but let's enforce non-empty if provided\n//   if (user.department === undefined || user.department === null) {\n//     user.department = \"\";\n//   }\n//   return { valid: Object.keys(errors).length === 0, errors };\n// }","map":{"version":3,"names":["isRequired","value","trim","isEmailValid","email","regex","test"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/utils/validation.js"],"sourcesContent":["\r\nexport const isRequired = (value) => value && value.trim() !== \"\";\r\n\r\nexport const isEmailValid = (email) => {\r\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return regex.test(email);\r\n};\r\n\r\n\r\n\r\n// /**\r\n//  * Validation helpers for the user form.\r\n//  */\r\n\r\n// /**\r\n//  * Very small email regex for client-side validation.\r\n//  */\r\n// export function isValidEmail(email) {\r\n//   const re = /^\\S+@\\S+\\.\\S+$/;\r\n//   return re.test(String(email).toLowerCase());\r\n// }\r\n\r\n// /**\r\n//  * Validate user form fields.\r\n//  * Expecting an object: { firstName, lastName, email, department }\r\n//  * Returns { valid: boolean, errors: { field: message } }\r\n//  */\r\n// export function validateUser(user) {\r\n//   const errors = {};\r\n//   if (!user.firstName || user.firstName.trim() === \"\") {\r\n//     errors.firstName = \"First name is required\";\r\n//   }\r\n//   if (!user.lastName || user.lastName.trim() === \"\") {\r\n//     errors.lastName = \"Last name is required\";\r\n//   }\r\n//   if (!user.email || user.email.trim() === \"\") {\r\n//     errors.email = \"Email is required\";\r\n//   } else if (!isValidEmail(user.email)) {\r\n//     errors.email = \"Please enter a valid email address\";\r\n//   }\r\n//   // department is optional but let's enforce non-empty if provided\r\n//   if (user.department === undefined || user.department === null) {\r\n//     user.department = \"\";\r\n//   }\r\n//   return { valid: Object.keys(errors).length === 0, errors };\r\n// }\r\n"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAIC,KAAK,IAAKA,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;AAEjE,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,MAAMC,KAAK,GAAG,4BAA4B;EAC1C,OAAOA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;AAC1B,CAAC;;AAID;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}