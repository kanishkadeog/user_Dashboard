{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dmayu\\\\OneDrive\\\\Desktop\\\\kanishka\\\\project\\\\extra\\\\user_Dashboard\\\\user_dashboard\\\\src\\\\pages\\\\EditUserPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UserForm from \"../components/UserForm\";\nimport { updateUser, getUsers } from \"../services/api\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get user ID from URL\n  const navigate = useNavigate(); // Navigation hook\n  const [user, setUser] = useState(null); // State to store user data\n\n  // Fetch user data when component mounts or id changes\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const users = await getUsers(); // Fetch all users\n        const u = users.find(u => u.id === Number(id)); // Find user by ID\n        const [firstName, lastName] = u.name.split(\" \"); // Split full name into first and last\n        setUser({\n          firstName,\n          lastName,\n          email: u.email,\n          department: u.department || \"IT\" // Default department if missing\n        });\n      } catch {\n        alert(\"Error fetching user\");\n      }\n    };\n    fetchUser();\n  }, [id]);\n\n  // Handle form submission\n  const handleSubmit = async data => {\n    try {\n      // Update user data via API\n      await updateUser(id, {\n        name: `${data.firstName} ${data.lastName}`,\n        email: data.email,\n        department: data.department\n      });\n      alert(\"User updated successfully\");\n      navigate(\"/users\"); // Navigate back to Users page\n    } catch {\n      alert(\"Error updating user\");\n    }\n  };\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-4 shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      initialData: user,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this) // Show loading until user data is fetched\n  ;\n};\n_s(EditUserPage, \"Ffotjx5VV3ZpJx+o8KIxjh0rQ1U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditUserPage;\nexport default EditUserPage;\nvar _c;\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"names":["React","useEffect","useState","UserForm","updateUser","getUsers","useParams","useNavigate","jsxDEV","_jsxDEV","EditUserPage","_s","id","navigate","user","setUser","fetchUser","users","u","find","Number","firstName","lastName","name","split","email","department","alert","handleSubmit","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialData","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/dmayu/OneDrive/Desktop/kanishka/project/extra/user_Dashboard/user_dashboard/src/pages/EditUserPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UserForm from \"../components/UserForm\";\r\nimport { updateUser, getUsers } from \"../services/api\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst EditUserPage = () => {\r\n  const { id } = useParams(); // Get user ID from URL\r\n  const navigate = useNavigate(); // Navigation hook\r\n  const [user, setUser] = useState(null); // State to store user data\r\n\r\n  // Fetch user data when component mounts or id changes\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const users = await getUsers(); // Fetch all users\r\n        const u = users.find((u) => u.id === Number(id)); // Find user by ID\r\n        const [firstName, lastName] = u.name.split(\" \"); // Split full name into first and last\r\n        setUser({ \r\n          firstName, \r\n          lastName, \r\n          email: u.email, \r\n          department: u.department || \"IT\" // Default department if missing\r\n        });\r\n      } catch {\r\n        alert(\"Error fetching user\");\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [id]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (data) => {\r\n    try {\r\n      // Update user data via API\r\n      await updateUser(id, { \r\n        name: `${data.firstName} ${data.lastName}`, \r\n        email: data.email, \r\n        department: data.department \r\n      });\r\n      alert(\"User updated successfully\");\r\n      navigate(\"/users\"); // Navigate back to Users page\r\n    } catch {\r\n      alert(\"Error updating user\");\r\n    }\r\n  };\r\n\r\n  return user ? (\r\n    <div className=\"card p-4 shadow-sm\">\r\n      <h4>Edit User</h4>\r\n      {/* UserForm component pre-filled with user data */}\r\n      <UserForm initialData={user} onSubmit={handleSubmit} />\r\n    </div>\r\n  ) : (\r\n    <p>Loading...</p> // Show loading until user data is fetched\r\n  );\r\n};\r\n\r\nexport default EditUserPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,iBAAiB;AACtD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMZ,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChC,MAAMa,CAAC,GAAGD,KAAK,CAACE,IAAI,CAAED,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKQ,MAAM,CAACR,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAACS,SAAS,EAAEC,QAAQ,CAAC,GAAGJ,CAAC,CAACK,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACjDT,OAAO,CAAC;UACNM,SAAS;UACTC,QAAQ;UACRG,KAAK,EAAEP,CAAC,CAACO,KAAK;UACdC,UAAU,EAAER,CAAC,CAACQ,UAAU,IAAI,IAAI,CAAC;QACnC,CAAC,CAAC;MACJ,CAAC,CAAC,MAAM;QACNC,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC;IACDX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;;EAER;EACA,MAAMgB,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF;MACA,MAAMzB,UAAU,CAACQ,EAAE,EAAE;QACnBW,IAAI,EAAE,GAAGM,IAAI,CAACR,SAAS,IAAIQ,IAAI,CAACP,QAAQ,EAAE;QAC1CG,KAAK,EAAEI,IAAI,CAACJ,KAAK;QACjBC,UAAU,EAAEG,IAAI,CAACH;MACnB,CAAC,CAAC;MACFC,KAAK,CAAC,2BAA2B,CAAC;MAClCd,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,MAAM;MACNc,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,OAAOb,IAAI,gBACTL,OAAA;IAAKqB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElB1B,OAAA,CAACN,QAAQ;MAACiC,WAAW,EAAEtB,IAAK;MAACuB,QAAQ,EAAET;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC,gBAEN1B,OAAA;IAAAsB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,CAAC;EACnB;AACH,CAAC;AAACxB,EAAA,CAlDID,YAAY;EAAA,QACDJ,SAAS,EACPC,WAAW;AAAA;AAAA+B,EAAA,GAFxB5B,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}